// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package autoscaling

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_autoscaling_scaling_configuration", scalingConfigurationDataSource)
}

// scalingConfigurationDataSource returns the Terraform volcenginecc_autoscaling_scaling_configuration data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::AutoScaling::ScalingConfiguration resource.
func scalingConfigurationDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: CreatedAt
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "资源创建时间(UTC时间)",
		//	  "type": "string"
		//	}
		"created_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "资源创建时间(UTC时间)",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Eip
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP。",
		//	  "properties": {
		//	    "Bandwidth": {
		//	      "description": "公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。",
		//	      "maximum": 500,
		//	      "minimum": 1,
		//	      "type": "integer"
		//	    },
		//	    "BandwidthPackageId": {
		//	      "description": "共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。",
		//	      "type": "string"
		//	    },
		//	    "BillingType": {
		//	      "description": "公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。",
		//	      "enum": [
		//	        "PostPaidByBandwidth",
		//	        "PostPaidByTraffic"
		//	      ],
		//	      "type": "string"
		//	    },
		//	    "ISP": {
		//	      "description": "线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。",
		//	      "enum": [
		//	        "BGP",
		//	        "ChinaMobile",
		//	        "ChinaTelecom",
		//	        "ChinaUnicom"
		//	      ],
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"eip": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Bandwidth
				"bandwidth": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: BandwidthPackageId
				"bandwidth_package_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: BillingType
				"billing_type": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ISP
				"isp": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "公网IP。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: HostName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。",
		//	  "type": "string"
		//	}
		"host_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: HpcClusterId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。",
		//	  "type": "string"
		//	}
		"hpc_cluster_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ImageId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "镜像ID，伸缩组自动创建实例时使用的镜像资源。",
		//	  "type": "string"
		//	}
		"image_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "镜像ID，伸缩组自动创建实例时使用的镜像资源。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceChargeType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）",
		//	  "enum": [
		//	    "PrePaid",
		//	    "PostPaid"
		//	  ],
		//	  "type": "string"
		//	}
		"instance_charge_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceDescription
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。",
		//	  "type": "string"
		//	}
		"instance_description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。",
		//	  "type": "string"
		//	}
		"instance_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceTypeOverrides
		// Cloud Control resource type schema:
		//
		//	{
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "抢占式实例。",
		//	    "properties": {
		//	      "InstanceType": {
		//	        "description": "指定抢占式实例的规格。参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - InstanceType：表示抢占式实例的规格。多个规格之间用\u0026分隔。",
		//	        "type": "string"
		//	      },
		//	      "PriceLimit": {
		//	        "description": "指定抢占式实例规格每小时的最高价格参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - PriceLimit：表示抢占式实例规格每小时的最高价格。取值：大于0，且最大不超过3位小数。多个价格之间用\u0026分隔。",
		//	        "type": "number"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "maxItems": 10,
		//	  "minItems": 1,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"instance_type_overrides": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: InstanceType
					"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "指定抢占式实例的规格。参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - InstanceType：表示抢占式实例的规格。多个规格之间用&分隔。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PriceLimit
					"price_limit": schema.Float64Attribute{ /*START ATTRIBUTE*/
						Description: "指定抢占式实例规格每小时的最高价格参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - PriceLimit：表示抢占式实例规格每小时的最高价格。取值：大于0，且最大不超过3位小数。多个价格之间用&分隔。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceTypes
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例的计算规格列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"instance_types": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "实例的计算规格列表。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ipv6AddressCount
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。",
		//	  "enum": [
		//	    0,
		//	    1
		//	  ],
		//	  "type": "integer"
		//	}
		"ipv_6_address_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: KeyPairName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。",
		//	  "type": "string"
		//	}
		"key_pair_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LifecycleState
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "生命周期状态。取值：Active（活跃）/InActive（非活跃）",
		//	  "enum": [
		//	    "Active",
		//	    "InActive"
		//	  ],
		//	  "type": "string"
		//	}
		"lifecycle_state": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "生命周期状态。取值：Active（活跃）/InActive（非活跃）",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Password
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^\u0026*()_-+= |，不能以“/”和“$6$”开头",
		//	  "type": "string"
		//	}
		"password": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&*()_-+= |，不能以“/”和“$6$”开头",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。\n只能包含字母、数字、下划线“_”、点“.”和中划线“-”。\n长度限制在64个字符以内。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。\n只能包含字母、数字、下划线“_”、点“.”和中划线“-”。\n长度限制在64个字符以内。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ScalingConfigurationId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "伸缩配置ID。",
		//	  "type": "string"
		//	}
		"scaling_configuration_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "伸缩配置ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ScalingConfigurationName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。",
		//	  "type": "string"
		//	}
		"scaling_configuration_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ScalingGroupId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "伸缩配置所属的伸缩组ID。",
		//	  "type": "string"
		//	}
		"scaling_group_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "伸缩配置所属的伸缩组ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SecurityEnhancementStrategy
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。",
		//	  "enum": [
		//	    "Active",
		//	    "InActive"
		//	  ],
		//	  "type": "string"
		//	}
		"security_enhancement_strategy": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SecurityGroupIds
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例主网卡关联的安全组ID。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "maxItems": 5,
		//	  "minItems": 1,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"security_group_ids": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "实例主网卡关联的安全组ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SpotStrategy
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。",
		//	  "enum": [
		//	    "NoSpot",
		//	    "SpotAsPriceGo",
		//	    "SpotWithPriceLimit"
		//	  ],
		//	  "type": "string"
		//	}
		"spot_strategy": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "标签键值对。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Key": {
		//	        "description": "标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签键。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "标签键值对。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdatedAt
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "资源更新时间(UTC时间)",
		//	  "type": "string"
		//	}
		"updated_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "资源更新时间(UTC时间)",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UserData
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。",
		//	  "type": "string"
		//	}
		"user_data": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Volumes
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "云盘。",
		//	    "properties": {
		//	      "DeleteWithInstance": {
		//	        "description": "云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。",
		//	        "type": "boolean"
		//	      },
		//	      "Size": {
		//	        "description": "云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用\u0026分隔。",
		//	        "type": "integer"
		//	      },
		//	      "VolumeType": {
		//	        "description": "云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD_FlexPL：极速型SSDFlexPL。ESSD_PL0：极速型SSD PL0。多个云盘之间用\u0026分隔。",
		//	        "enum": [
		//	          "ESSD_FlexPL",
		//	          "ESSD_PL0",
		//	          "PTSSD"
		//	        ],
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": false
		//	}
		"volumes": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: DeleteWithInstance
					"delete_with_instance": schema.BoolAttribute{ /*START ATTRIBUTE*/
						Description: "云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Size
					"size": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&分隔。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: VolumeType
					"volume_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD_FlexPL：极速型SSDFlexPL。ESSD_PL0：极速型SSD PL0。多个云盘之间用&分隔。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "云盘。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ZoneId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "伸缩配置可用区ID。",
		//	  "type": "string"
		//	}
		"zone_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "伸缩配置可用区ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::AutoScaling::ScalingConfiguration",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::AutoScaling::ScalingConfiguration").WithTerraformTypeName("volcenginecc_autoscaling_scaling_configuration")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"bandwidth":                     "Bandwidth",
		"bandwidth_package_id":          "BandwidthPackageId",
		"billing_type":                  "BillingType",
		"created_at":                    "CreatedAt",
		"delete_with_instance":          "DeleteWithInstance",
		"eip":                           "Eip",
		"host_name":                     "HostName",
		"hpc_cluster_id":                "HpcClusterId",
		"image_id":                      "ImageId",
		"instance_charge_type":          "InstanceChargeType",
		"instance_description":          "InstanceDescription",
		"instance_name":                 "InstanceName",
		"instance_type":                 "InstanceType",
		"instance_type_overrides":       "InstanceTypeOverrides",
		"instance_types":                "InstanceTypes",
		"ipv_6_address_count":           "Ipv6AddressCount",
		"isp":                           "ISP",
		"key":                           "Key",
		"key_pair_name":                 "KeyPairName",
		"lifecycle_state":               "LifecycleState",
		"password":                      "Password",
		"price_limit":                   "PriceLimit",
		"project_name":                  "ProjectName",
		"scaling_configuration_id":      "ScalingConfigurationId",
		"scaling_configuration_name":    "ScalingConfigurationName",
		"scaling_group_id":              "ScalingGroupId",
		"security_enhancement_strategy": "SecurityEnhancementStrategy",
		"security_group_ids":            "SecurityGroupIds",
		"size":                          "Size",
		"spot_strategy":                 "SpotStrategy",
		"tags":                          "Tags",
		"updated_at":                    "UpdatedAt",
		"user_data":                     "UserData",
		"value":                         "Value",
		"volume_type":                   "VolumeType",
		"volumes":                       "Volumes",
		"zone_id":                       "ZoneId",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
