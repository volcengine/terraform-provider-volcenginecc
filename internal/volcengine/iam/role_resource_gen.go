// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package iam

import (
	"context"
<<<<<<< HEAD
=======
	"regexp"
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)

	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
<<<<<<< HEAD
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
=======
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
	fwvalidators "github.com/volcengine/terraform-provider-volcenginecc/internal/validators"
)

func init() {
	registry.AddResourceFactory("volcenginecc_iam_role", roleResource)
}

// roleResource returns the Terraform volcenginecc_iam_role resource.
// This Terraform resource corresponds to the Cloud Control Volcengine::IAM::Role resource.
func roleResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: CreateDate
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色创建时间。",
		//	  "type": "string"
		//	}
		"create_date": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色创建时间。",
=======
		//	  "description": "角色创建时间",
		//	  "type": "string"
		//	}
		"create_date": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色创建时间",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色描述，长度不超过128。",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色描述，长度不超过128。",
=======
		//	  "description": "角色描述",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色描述",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DisplayName
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色显示名，长度不超过64。",
		//	  "type": "string"
		//	}
		"display_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色显示名，长度不超过64。",
=======
		//	  "description": "角色显示名",
		//	  "type": "string"
		//	}
		"display_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色显示名",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: IsServiceLinkedRole
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "是否是服务关联角色, 0否，1是。",
=======
		//	  "description": "是否是服务关联角色, 0否，1是",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
		//	  "enum": [
		//	    0,
		//	    1
		//	  ],
		//	  "type": "integer"
		//	}
		"is_service_linked_role": schema.Int64Attribute{ /*START ATTRIBUTE*/
<<<<<<< HEAD
			Description: "是否是服务关联角色, 0否，1是。",
=======
			Description: "是否是服务关联角色, 0否，1是",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: MaxSessionDuration
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。",
=======
		//	  "description": "角色最大会话时间",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
		//	  "maximum": 43200,
		//	  "minimum": 3600,
		//	  "type": "integer"
		//	}
		"max_session_duration": schema.Int64Attribute{ /*START ATTRIBUTE*/
<<<<<<< HEAD
			Description: "角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。",
=======
			Description: "角色最大会话时间",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Optional:    true,
			Computed:    true,
			Validators: []validator.Int64{ /*START VALIDATORS*/
				int64validator.Between(3600, 43200),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Policies
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "角色策略。",
		//	    "properties": {
		//	      "PolicyName": {
		//	        "description": "策略名。",
		//	        "type": "string"
		//	      },
		//	      "PolicyType": {
		//	        "description": "策略类型，策略类型。System代表系统预设策略，Custom代表自定义策略。",
=======
		//	  "items": {
		//	    "description": "角色策略",
		//	    "properties": {
		//	      "PolicyName": {
		//	        "description": "策略名",
		//	        "type": "string"
		//	      },
		//	      "PolicyType": {
		//	        "description": "策略类型",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
		//	        "enum": [
		//	          "System",
		//	          "Custom"
		//	        ],
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "PolicyName",
		//	      "PolicyType"
		//	    ],
		//	    "type": "object"
		//	  },
<<<<<<< HEAD
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"policies": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
=======
		//	  "type": "array"
		//	}
		"policies": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: PolicyName
					"policy_name": schema.StringAttribute{ /*START ATTRIBUTE*/
<<<<<<< HEAD
						Description: "策略名。",
=======
						Description: "策略名",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: PolicyType
					"policy_type": schema.StringAttribute{ /*START ATTRIBUTE*/
<<<<<<< HEAD
						Description: "策略类型，策略类型。System代表系统预设策略，Custom代表自定义策略。",
=======
						Description: "策略类型",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.OneOf(
								"System",
								"Custom",
							),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Optional: true,
			Computed: true,
<<<<<<< HEAD
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
=======
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: RoleId
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色ID。",
		//	  "type": "integer"
		//	}
		"role_id": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "角色ID。",
=======
		//	  "description": "角色ID",
		//	  "type": "integer"
		//	}
		"role_id": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "角色ID",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: RoleName
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色名，长度1~64，支持英文、数字和.-_符号。",
		//	  "type": "string"
		//	}
		"role_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色名，长度1~64，支持英文、数字和.-_符号。",
			Required:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.RequiresReplace(),
			}, /*END PLAN MODIFIERS*/
=======
		//	  "description": "角色名",
		//	  "pattern": "^[\\w.\\-]{1,64}$",
		//	  "type": "string"
		//	}
		"role_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色名",
			Required:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.RegexMatches(regexp.MustCompile("^[\\w.\\-]{1,64}$"), ""),
			}, /*END VALIDATORS*/
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "insertionOrder": false,
=======
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
		//	  "items": {
		//	    "description": "标签",
		//	    "properties": {
		//	      "Key": {
<<<<<<< HEAD
		//	        "description": "标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "标签值。",
=======
		//	        "description": "标签键",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "标签值",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
<<<<<<< HEAD
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
=======
		//	  "type": "array"
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
<<<<<<< HEAD
						Description: "标签键。",
=======
						Description: "标签键",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
<<<<<<< HEAD
						Description: "标签值。",
=======
						Description: "标签值",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Optional: true,
			Computed: true,
<<<<<<< HEAD
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
=======
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Trn
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色TRN。",
		//	  "type": "string"
		//	}
		"trn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色TRN。",
=======
		//	  "description": "角色TRN",
		//	  "type": "string"
		//	}
		"trn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色TRN",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TrustPolicyDocument
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。",
		//	  "type": "string"
		//	}
		"trust_policy_document": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。",
=======
		//	  "description": "角色信任策略",
		//	  "type": "string"
		//	}
		"trust_policy_document": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色信任策略",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: UpdateDate
		// Cloud Control resource type schema:
		//
		//	{
<<<<<<< HEAD
		//	  "description": "角色更新时间。",
		//	  "type": "string"
		//	}
		"update_date": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色更新时间。",
=======
		//	  "description": "角色更新时间",
		//	  "type": "string"
		//	}
		"update_date": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "角色更新时间",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to Cloud Control primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
<<<<<<< HEAD
		Description: "角色（Role）是IAM体系里的一种虚拟身份，用于将账号内某些访问权限授予给各类身份实体，受信任的身份实体可扮演该角色来访问账号内的云资源。",
=======
		Description: "角色",
>>>>>>> b862fcd (feat: volcenginecc_vpc_vpc、volcenginecc_iam_user、volcengine_iam_role、volcenginecc_tos_bucket)
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::IAM::Role").WithTerraformTypeName("volcenginecc_iam_role")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"create_date":            "CreateDate",
		"description":            "Description",
		"display_name":           "DisplayName",
		"is_service_linked_role": "IsServiceLinkedRole",
		"key":                    "Key",
		"max_session_duration":   "MaxSessionDuration",
		"policies":               "Policies",
		"policy_name":            "PolicyName",
		"policy_type":            "PolicyType",
		"role_id":                "RoleId",
		"role_name":              "RoleName",
		"tags":                   "Tags",
		"trn":                    "Trn",
		"trust_policy_document":  "TrustPolicyDocument",
		"update_date":            "UpdateDate",
		"value":                  "Value",
	})

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
