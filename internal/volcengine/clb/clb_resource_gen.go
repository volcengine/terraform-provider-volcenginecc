// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package clb

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-validators/float64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/boolplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/float64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/objectplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
	fwvalidators "github.com/volcengine/terraform-provider-volcenginecc/internal/validators"
)

func init() {
	registry.AddResourceFactory("volcenginecc_clb_clb", cLBResource)
}

// cLBResource returns the Terraform volcenginecc_clb_clb resource.
// This Terraform resource corresponds to the Cloud Control Volcengine::CLB::CLB resource.
func cLBResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AccessLog
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例中访问日志的信息",
		//	  "properties": {
		//	    "BucketName": {
		//	      "description": "存储七层访问日志的对象存储桶的名称",
		//	      "type": "string"
		//	    },
		//	    "DeliveryType": {
		//	      "description": "日志投递类型",
		//	      "enum": [
		//	        "tos",
		//	        "tls"
		//	      ],
		//	      "type": "string"
		//	    },
		//	    "Enabled": {
		//	      "description": "是否开启访问日志（七层）投递至对象存储TOS的功能",
		//	      "type": "boolean"
		//	    },
		//	    "TlsProjectId": {
		//	      "description": "日志项目",
		//	      "type": "string"
		//	    },
		//	    "TlsTopicId": {
		//	      "description": "日志主题",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"access_log": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: BucketName
				"bucket_name": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "存储七层访问日志的对象存储桶的名称",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: DeliveryType
				"delivery_type": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "日志投递类型",
					Optional:    true,
					Computed:    true,
					Validators: []validator.String{ /*START VALIDATORS*/
						stringvalidator.OneOf(
							"tos",
							"tls",
						),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: Enabled
				"enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "是否开启访问日志（七层）投递至对象存储TOS的功能",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: TlsProjectId
				"tls_project_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "日志项目",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: TlsTopicId
				"tls_topic_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "日志主题",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "负载均衡实例中访问日志的信息",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: AccountId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例所属的账号ID",
		//	  "type": "string"
		//	}
		"account_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例所属的账号ID",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: AddressIpVersion
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的IP地址类型",
		//	  "type": "string"
		//	}
		"address_ip_version": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的IP地址类型",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: AllowedPorts
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "允许的多个端口范围",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"allowed_ports": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "允许的多个端口范围",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: BusinessStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例是否被锁定",
		//	  "type": "string"
		//	}
		"business_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例是否被锁定",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: BypassSecurityGroupEnabled
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否开启bypass安全组功能",
		//	  "type": "string"
		//	}
		"bypass_security_group_enabled": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "是否开启bypass安全组功能",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: CreateTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的创建时间",
		//	  "type": "string"
		//	}
		"create_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的创建时间",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DeletedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的预期回收时间",
		//	  "type": "string"
		//	}
		"deleted_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的预期回收时间",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的描述",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的描述",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Eip
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的公网IP的信息",
		//	  "properties": {
		//	    "Bandwidth": {
		//	      "description": "带宽峰值",
		//	      "type": "number"
		//	    },
		//	    "BandwidthPackageId": {
		//	      "description": "共享带宽包ID",
		//	      "type": "string"
		//	    },
		//	    "EipBillingType": {
		//	      "description": "计费方式",
		//	      "maximum": 3,
		//	      "minimum": 1,
		//	      "type": "number"
		//	    },
		//	    "ISP": {
		//	      "description": "线路类型",
		//	      "type": "string"
		//	    },
		//	    "SecurityProtectionInstanceId": {
		//	      "description": "防护包ID",
		//	      "type": "number"
		//	    },
		//	    "SecurityProtectionTypes": {
		//	      "description": "安全防护类型",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "type": "string"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"eip": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Bandwidth
				"bandwidth": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "带宽峰值",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
						float64planmodifier.RequiresReplaceIfConfigured(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: BandwidthPackageId
				"bandwidth_package_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "共享带宽包ID",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
						stringplanmodifier.RequiresReplaceIfConfigured(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: EipBillingType
				"eip_billing_type": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "计费方式",
					Optional:    true,
					Computed:    true,
					Validators: []validator.Float64{ /*START VALIDATORS*/
						float64validator.Between(1.000000, 3.000000),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
						float64planmodifier.RequiresReplaceIfConfigured(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: ISP
				"isp": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "线路类型",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
						stringplanmodifier.RequiresReplaceIfConfigured(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: SecurityProtectionInstanceId
				"security_protection_instance_id": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "防护包ID",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
						float64planmodifier.RequiresReplaceIfConfigured(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: SecurityProtectionTypes
				"security_protection_types": schema.SetAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "安全防护类型",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
						setplanmodifier.UseStateForUnknown(),
						setplanmodifier.RequiresReplaceIfConfigured(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "负载均衡实例的公网IP的信息",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: EipAddress
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP地址",
		//	  "type": "string"
		//	}
		"eip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP地址",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: EipID
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP ID",
		//	  "type": "string"
		//	}
		"eip_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP ID",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Enabled
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的启用状态",
		//	  "type": "boolean"
		//	}
		"enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的启用状态",
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Eni
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的私网IPv4地址信息",
		//	  "properties": {
		//	    "EniAddress": {
		//	      "description": "负载均衡实例的私网IP地址",
		//	      "type": "string"
		//	    },
		//	    "EniID": {
		//	      "description": "负载均衡实例占用的网卡ID",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"eni": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: EniAddress
				"eni_address": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "负载均衡实例的私网IP地址",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: EniID
				"eni_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "负载均衡实例占用的网卡ID",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "负载均衡实例的私网IPv4地址信息",
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: EniAddressNum
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的私网IPv4地址数量。该参数和参数EniAddress不能同时传入，如果传入该参数，则无需传入EniAddress",
		//	  "type": "number"
		//	}
		"eni_address_num": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的私网IPv4地址数量。该参数和参数EniAddress不能同时传入，如果传入该参数，则无需传入EniAddress",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
				float64planmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: EniIpv6Address
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的私网IPv6地址",
		//	  "type": "string"
		//	}
		"eni_ipv_6_address": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的私网IPv6地址",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Enis
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的私网IPv4地址信息列表，创建时通过EniAddressNum指定数量",
		//	  "properties": {
		//	    "EniAddress": {
		//	      "description": "负载均衡实例的私网IP地址",
		//	      "type": "string"
		//	    },
		//	    "EniID": {
		//	      "description": "负载均衡实例占用的网卡ID",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"enis": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: EniAddress
				"eni_address": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "负载均衡实例的私网IP地址",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: EniID
				"eni_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "负载均衡实例占用的网卡ID",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "负载均衡实例的私网IPv4地址信息列表，创建时通过EniAddressNum指定数量",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ExclusiveClusterId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "独占集群Id",
		//	  "type": "string"
		//	}
		"exclusive_cluster_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "独占集群Id",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ExpiredTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例到期时间",
		//	  "type": "string"
		//	}
		"expired_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例到期时间",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Listeners
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例中监听器的信息",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "监听器信息",
		//	    "properties": {
		//	      "ListenerId": {
		//	        "description": "监听器的ID",
		//	        "type": "string"
		//	      },
		//	      "ListenerName": {
		//	        "description": "监听器的名称",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "ListenerId",
		//	      "ListenerName"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"listeners": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: ListenerId
					"listener_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "监听器的ID",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ListenerName
					"listener_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "监听器的名称",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "负载均衡实例中监听器的信息\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: LoadBalancerBillingType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例计费方式",
		//	  "type": "number"
		//	}
		"load_balancer_billing_type": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例计费方式",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: LoadBalancerId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例ID",
		//	  "type": "string"
		//	}
		"load_balancer_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例ID",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: LoadBalancerName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的名称",
		//	  "type": "string"
		//	}
		"load_balancer_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的名称",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: LoadBalancerSpec
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的规格",
		//	  "type": "string"
		//	}
		"load_balancer_spec": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的规格",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: LockReason
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例被冻结的原因",
		//	  "type": "string"
		//	}
		"lock_reason": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例被冻结的原因",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: MasterZoneId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的主可用区ID",
		//	  "type": "string"
		//	}
		"master_zone_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的主可用区ID",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ModificationProtectionReason
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "设置修改保护状态的原因",
		//	  "type": "string"
		//	}
		"modification_protection_reason": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "设置修改保护状态的原因",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ModificationProtectionStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例在控制台上修改保护的状态",
		//	  "type": "string"
		//	}
		"modification_protection_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例在控制台上修改保护的状态",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: NewArch
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否为新架构",
		//	  "type": "boolean"
		//	}
		"new_arch": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否为新架构",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: OrderId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "订单ID。仅在创建动作的参数LoadBalancerBillingType配置为1时，改参数有值",
		//	  "type": "string"
		//	}
		"order_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "订单ID。仅在创建动作的参数LoadBalancerBillingType配置为1时，改参数有值",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: OverdueTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的冻结时间",
		//	  "type": "string"
		//	}
		"overdue_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的冻结时间",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Period
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "包年包月计费类型的时长数量",
		//	  "type": "number"
		//	}
		"period": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "包年包月计费类型的时长数量",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PeriodUnit
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "包年包月计费类型的时长单位",
		//	  "type": "string"
		//	}
		"period_unit": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "包年包月计费类型的时长单位",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "CLB实例所属项目的名称",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "CLB实例所属项目的名称",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: RegionId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "请求的Region",
		//	  "type": "string"
		//	}
		"region_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "请求的Region",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ServerGroups
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例中后端服务器组的信息",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "监听器信息",
		//	    "properties": {
		//	      "ServerGroupId": {
		//	        "description": "负载均衡实例中后端服务器组的ID",
		//	        "type": "string"
		//	      },
		//	      "ServerGroupName": {
		//	        "description": "负载均衡实例中后端服务器组的名称",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "ServerGroupId",
		//	      "ServerGroupName"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"server_groups": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: ServerGroupId
					"server_group_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "负载均衡实例中后端服务器组的ID",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ServerGroupName
					"server_group_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "负载均衡实例中后端服务器组的名称",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "负载均衡实例中后端服务器组的信息\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ServiceManaged
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "CLB实例是否为托管资源",
		//	  "type": "boolean"
		//	}
		"service_managed": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "CLB实例是否为托管资源",
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: SlaveZoneId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的备可用区ID",
		//	  "type": "string"
		//	}
		"slave_zone_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的备可用区ID",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例状态",
		//	  "enum": [
		//	    "Provisioning",
		//	    "Creating",
		//	    "Inactive",
		//	    "Active",
		//	    "Configuring",
		//	    "Deleting",
		//	    "CreateFailed"
		//	  ],
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例状态",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: SubnetId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例所属VPC内的子网ID",
		//	  "type": "string"
		//	}
		"subnet_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例所属VPC内的子网ID",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "CLB实例标签",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "资源标签",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "标签键",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "标签值",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签键",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签值",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "CLB实例标签\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TimestampRemoveEnabled
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否开启 TCP Timestamp 清除功能",
		//	  "type": "string"
		//	}
		"timestamp_remove_enabled": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "是否开启 TCP Timestamp 清除功能",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Type
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的类型",
		//	  "type": "string"
		//	}
		"type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的类型",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: UpdateTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的最近操作时间",
		//	  "type": "string"
		//	}
		"update_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的最近操作时间",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VpcId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例所属的VPC ID",
		//	  "type": "string"
		//	}
		"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例所属的VPC ID",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ZoneType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "负载均衡实例的可用区类型",
		//	  "type": "string"
		//	}
		"zone_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "负载均衡实例的可用区类型",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to Cloud Control primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "负载均衡实例",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::CLB::CLB").WithTerraformTypeName("volcenginecc_clb_clb")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"access_log":                      "AccessLog",
		"account_id":                      "AccountId",
		"address_ip_version":              "AddressIpVersion",
		"allowed_ports":                   "AllowedPorts",
		"bandwidth":                       "Bandwidth",
		"bandwidth_package_id":            "BandwidthPackageId",
		"bucket_name":                     "BucketName",
		"business_status":                 "BusinessStatus",
		"bypass_security_group_enabled":   "BypassSecurityGroupEnabled",
		"create_time":                     "CreateTime",
		"deleted_time":                    "DeletedTime",
		"delivery_type":                   "DeliveryType",
		"description":                     "Description",
		"eip":                             "Eip",
		"eip_address":                     "EipAddress",
		"eip_billing_type":                "EipBillingType",
		"eip_id":                          "EipID",
		"enabled":                         "Enabled",
		"eni":                             "Eni",
		"eni_address":                     "EniAddress",
		"eni_address_num":                 "EniAddressNum",
		"eni_id":                          "EniID",
		"eni_ipv_6_address":               "EniIpv6Address",
		"enis":                            "Enis",
		"exclusive_cluster_id":            "ExclusiveClusterId",
		"expired_time":                    "ExpiredTime",
		"isp":                             "ISP",
		"key":                             "Key",
		"listener_id":                     "ListenerId",
		"listener_name":                   "ListenerName",
		"listeners":                       "Listeners",
		"load_balancer_billing_type":      "LoadBalancerBillingType",
		"load_balancer_id":                "LoadBalancerId",
		"load_balancer_name":              "LoadBalancerName",
		"load_balancer_spec":              "LoadBalancerSpec",
		"lock_reason":                     "LockReason",
		"master_zone_id":                  "MasterZoneId",
		"modification_protection_reason":  "ModificationProtectionReason",
		"modification_protection_status":  "ModificationProtectionStatus",
		"new_arch":                        "NewArch",
		"order_id":                        "OrderId",
		"overdue_time":                    "OverdueTime",
		"period":                          "Period",
		"period_unit":                     "PeriodUnit",
		"project_name":                    "ProjectName",
		"region_id":                       "RegionId",
		"security_protection_instance_id": "SecurityProtectionInstanceId",
		"security_protection_types":       "SecurityProtectionTypes",
		"server_group_id":                 "ServerGroupId",
		"server_group_name":               "ServerGroupName",
		"server_groups":                   "ServerGroups",
		"service_managed":                 "ServiceManaged",
		"slave_zone_id":                   "SlaveZoneId",
		"status":                          "Status",
		"subnet_id":                       "SubnetId",
		"tags":                            "Tags",
		"timestamp_remove_enabled":        "TimestampRemoveEnabled",
		"tls_project_id":                  "TlsProjectId",
		"tls_topic_id":                    "TlsTopicId",
		"type":                            "Type",
		"update_time":                     "UpdateTime",
		"value":                           "Value",
		"vpc_id":                          "VpcId",
		"zone_type":                       "ZoneType",
	})

	opts = opts.WithReadOnlyPropertyPaths([]string{
		"/properties/LoadBalancerId",
		"/properties/AccountId",
		"/properties/Eni",
		"/properties/Enabled",
		"/properties/BusinessStatus",
		"/properties/Status",
		"/properties/OverdueTime",
		"/properties/LockReason",
		"/properties/DeletedTime",
		"/properties/ExpiredTime",
		"/properties/ServiceManaged",
		"/properties/CreateTime",
		"/properties/UpdateTime",
		"/properties/TimestampRemoveEnabled",
		"/properties/EniIpv6Address",
	})

	opts = opts.WithCreateOnlyPropertyPaths([]string{
		"/properties/RegionId",
		"/properties/MasterZoneId",
		"/properties/SlaveZoneId",
		"/properties/ProjectName",
		"/properties/VpcId",
		"/properties/SubnetId",
		"/properties/ZoneType",
		"/properties/Eip/ISP",
		"/properties/Eip/EipBillingType",
		"/properties/Eip/Bandwidth",
		"/properties/Eip/BandwidthPackageId",
		"/properties/Eip/SecurityProtectionTypes",
		"/properties/Eip/SecurityProtectionInstanceId",
		"/properties/EniAddressNum",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
