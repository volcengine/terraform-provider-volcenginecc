// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package clb

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_clb_nlb", nLBDataSource)
}

// nLBDataSource returns the Terraform volcenginecc_clb_nlb data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::CLB::NLB resource.
func nLBDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AccountId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例所属的账号ID。",
		//	  "type": "string"
		//	}
		"account_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例所属的账号ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: BillingStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。",
		//	  "enum": [
		//	    "Normal",
		//	    "FinancialLocked"
		//	  ],
		//	  "type": "string"
		//	}
		"billing_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: BillingType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的计费类型。3：按使用量计费",
		//	  "enum": [
		//	    3
		//	  ],
		//	  "format": "int64",
		//	  "type": "integer"
		//	}
		"billing_type": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的计费类型。3：按使用量计费",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的创建时间。",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的创建时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CrossZoneEnabled
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": true,
		//	  "description": "NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。",
		//	  "type": "boolean"
		//	}
		"cross_zone_enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DNSName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的DNS地址。",
		//	  "type": "string"
		//	}
		"dns_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的DNS地址。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。",
		//	  "maxLength": 255,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ExpectedOverdueTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例欠费关停时间。",
		//	  "type": "string"
		//	}
		"expected_overdue_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例欠费关停时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: IpAddressVersion
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。",
		//	  "enum": [
		//	    "ipv4",
		//	    "dualstack"
		//	  ],
		//	  "type": "string"
		//	}
		"ip_address_version": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ipv4BandwidthPackageId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "IPv4类型的共享带宽包ID。",
		//	  "type": "string"
		//	}
		"ipv_4_bandwidth_package_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "IPv4类型的共享带宽包ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ipv4NetworkType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。",
		//	  "enum": [
		//	    "internet",
		//	    "intranet"
		//	  ],
		//	  "type": "string"
		//	}
		"ipv_4_network_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ipv6BandwidthPackageId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "IPv6类型的共享带宽包ID。",
		//	  "type": "string"
		//	}
		"ipv_6_bandwidth_package_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "IPv6类型的共享带宽包ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ipv6NetworkType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。",
		//	  "enum": [
		//	    "internet",
		//	    "intranet"
		//	  ],
		//	  "type": "string"
		//	}
		"ipv_6_network_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LoadBalancerId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例ID。",
		//	  "type": "string"
		//	}
		"load_balancer_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LoadBalancerName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的名称。",
		//	  "type": "string"
		//	}
		"load_balancer_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ManagedSecurityGroupId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "系统为NLB实例自动关联的托管安全组ID。",
		//	  "type": "string"
		//	}
		"managed_security_group_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "系统为NLB实例自动关联的托管安全组ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ModificationProtectionStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。",
		//	  "enum": [
		//	    "NonProtection",
		//	    "ConsoleProtection",
		//	    ""
		//	  ],
		//	  "type": "string"
		//	}
		"modification_protection_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OverdueTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。",
		//	  "type": "string"
		//	}
		"overdue_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例所属项目的名称。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例所属项目的名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ReclaimedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。",
		//	  "type": "string"
		//	}
		"reclaimed_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SecurityGroupIds
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例关联的安全组ID列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"security_group_ids": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "NLB实例关联的安全组ID列表。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。",
		//	  "enum": [
		//	    "Inactive",
		//	    "Active",
		//	    "Creating",
		//	    "Provisioning",
		//	    "Configuring",
		//	    "Deleting",
		//	    "CreateFailed"
		//	  ],
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的标签信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "标签键值对。",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签键。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "NLB实例的标签信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的更新时间。",
		//	  "type": "string"
		//	}
		"updated_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例的更新时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VpcId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例所属的VPC ID。",
		//	  "type": "string"
		//	}
		"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "NLB实例所属的VPC ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ZoneMappings
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "NLB实例的可用区信息。",
		//	  "items": {
		//	    "properties": {
		//	      "EniId": {
		//	        "description": "网卡ID。",
		//	        "type": "string"
		//	      },
		//	      "Ipv4Address": {
		//	        "description": "NLB实例的私网IPv4 VIP地址。该参数不传入，则系统自动从子网中分配一个可用的IPv4地址。",
		//	        "type": "string"
		//	      },
		//	      "Ipv4EipAddress": {
		//	        "description": "NLB实例的公网IPv4 EIP地址。",
		//	        "type": "string"
		//	      },
		//	      "Ipv4EipId": {
		//	        "description": "NLB实例的公网IPv4 EIP ID。",
		//	        "type": "string"
		//	      },
		//	      "Ipv4HcStatus": {
		//	        "description": "NLB实例私网IPv4地址的健康状态。Healthy：健康。Unhealthy：异常。",
		//	        "type": "string"
		//	      },
		//	      "Ipv4LocalAddresses": {
		//	        "description": "NLB实例的私网IPv4 LIP地址。",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "type": "string"
		//	        },
		//	        "type": "array",
		//	        "uniqueItems": true
		//	      },
		//	      "Ipv6Address": {
		//	        "description": "NLB实例的私网IPv6 VIP地址。",
		//	        "type": "string"
		//	      },
		//	      "Ipv6EipId": {
		//	        "description": "NLB实例关联的IPv6公网带宽的ID。",
		//	        "type": "string"
		//	      },
		//	      "Ipv6HcStatus": {
		//	        "description": "NLB实例私网IPv6地址的健康状态。Healthy：健康。Unhealthy：异常。",
		//	        "type": "string"
		//	      },
		//	      "Ipv6LocalAddresses": {
		//	        "description": "NLB实例的私网IPv6 LIP地址。",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "type": "string"
		//	        },
		//	        "type": "array",
		//	        "uniqueItems": true
		//	      },
		//	      "SubnetId": {
		//	        "description": "NLB实例所属的子网ID。",
		//	        "type": "string"
		//	      },
		//	      "ZoneId": {
		//	        "description": "NLB实例所属的可用区ID。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array"
		//	}
		"zone_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: EniId
					"eni_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "网卡ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv4Address
					"ipv_4_address": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例的私网IPv4 VIP地址。该参数不传入，则系统自动从子网中分配一个可用的IPv4地址。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv4EipAddress
					"ipv_4_eip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例的公网IPv4 EIP地址。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv4EipId
					"ipv_4_eip_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例的公网IPv4 EIP ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv4HcStatus
					"ipv_4_hc_status": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例私网IPv4地址的健康状态。Healthy：健康。Unhealthy：异常。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv4LocalAddresses
					"ipv_4_local_addresses": schema.SetAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "NLB实例的私网IPv4 LIP地址。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv6Address
					"ipv_6_address": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例的私网IPv6 VIP地址。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv6EipId
					"ipv_6_eip_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例关联的IPv6公网带宽的ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv6HcStatus
					"ipv_6_hc_status": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例私网IPv6地址的健康状态。Healthy：健康。Unhealthy：异常。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ipv6LocalAddresses
					"ipv_6_local_addresses": schema.SetAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "NLB实例的私网IPv6 LIP地址。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: SubnetId
					"subnet_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例所属的子网ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ZoneId
					"zone_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "NLB实例所属的可用区ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "NLB实例的可用区信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::CLB::NLB",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::CLB::NLB").WithTerraformTypeName("volcenginecc_clb_nlb")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"account_id":                     "AccountId",
		"billing_status":                 "BillingStatus",
		"billing_type":                   "BillingType",
		"created_time":                   "CreatedTime",
		"cross_zone_enabled":             "CrossZoneEnabled",
		"description":                    "Description",
		"dns_name":                       "DNSName",
		"eni_id":                         "EniId",
		"expected_overdue_time":          "ExpectedOverdueTime",
		"ip_address_version":             "IpAddressVersion",
		"ipv_4_address":                  "Ipv4Address",
		"ipv_4_bandwidth_package_id":     "Ipv4BandwidthPackageId",
		"ipv_4_eip_address":              "Ipv4EipAddress",
		"ipv_4_eip_id":                   "Ipv4EipId",
		"ipv_4_hc_status":                "Ipv4HcStatus",
		"ipv_4_local_addresses":          "Ipv4LocalAddresses",
		"ipv_4_network_type":             "Ipv4NetworkType",
		"ipv_6_address":                  "Ipv6Address",
		"ipv_6_bandwidth_package_id":     "Ipv6BandwidthPackageId",
		"ipv_6_eip_id":                   "Ipv6EipId",
		"ipv_6_hc_status":                "Ipv6HcStatus",
		"ipv_6_local_addresses":          "Ipv6LocalAddresses",
		"ipv_6_network_type":             "Ipv6NetworkType",
		"key":                            "Key",
		"load_balancer_id":               "LoadBalancerId",
		"load_balancer_name":             "LoadBalancerName",
		"managed_security_group_id":      "ManagedSecurityGroupId",
		"modification_protection_status": "ModificationProtectionStatus",
		"overdue_time":                   "OverdueTime",
		"project_name":                   "ProjectName",
		"reclaimed_time":                 "ReclaimedTime",
		"security_group_ids":             "SecurityGroupIds",
		"status":                         "Status",
		"subnet_id":                      "SubnetId",
		"tags":                           "Tags",
		"updated_time":                   "UpdatedTime",
		"value":                          "Value",
		"vpc_id":                         "VpcId",
		"zone_id":                        "ZoneId",
		"zone_mappings":                  "ZoneMappings",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
