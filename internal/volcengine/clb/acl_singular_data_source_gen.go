// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package clb

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_clb_acl", aCLDataSource)
}

// aCLDataSource returns the Terraform volcenginecc_clb_acl data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::CLB::ACL resource.
func aCLDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AclEntries
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组中IP条目的详细信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Description": {
		//	        "description": "IP条目的描述，默认值为空字符串。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。",
		//	        "maxLength": 255,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      },
		//	      "Entry": {
		//	        "description": "IP条目的地址段，只支持CIDR地址。支持同时传入IPv4和IPv6条目。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "maxItems": 300,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"acl_entries": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Description
					"description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "IP条目的描述，默认值为空字符串。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Entry
					"entry": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "IP条目的地址段，只支持CIDR地址。支持同时传入IPv4和IPv6条目。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "访问控制策略组中IP条目的详细信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AclEntryCount
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组包含的IP条目数量。",
		//	  "format": "int64",
		//	  "type": "integer"
		//	}
		"acl_entry_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "访问控制策略组包含的IP条目数量。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AclId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组的ID。",
		//	  "type": "string"
		//	}
		"acl_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "访问控制策略组的ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AclName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1～128个字符。不填默认为访问控制策略组ID。",
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"acl_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "访问控制策略组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1～128个字符。不填默认为访问控制策略组ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreateTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组的创建时间。",
		//	  "type": "string"
		//	}
		"create_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "访问控制策略组的创建时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0～255字符。不填则默认为空字符串。",
		//	  "maxLength": 255,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "访问控制策略组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0～255字符。不填则默认为空字符串。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Listeners
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组关联的监听器的详细信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "AclType": {
		//	        "description": "监听器对本访问控制策略组的控制方式。white：白名单。监听器监听CLB的流量时，CLB仅转发其白名单关联访问控制策略组中IP地址的请求。black：黑名单。监听器监听CLB的流量时，对于黑名单关联访问控制策略组中IP地址的请求，CLB拒绝转发。",
		//	        "enum": [
		//	          "white",
		//	          "black"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "ListenerId": {
		//	        "description": "监听器的ID。",
		//	        "type": "string"
		//	      },
		//	      "ListenerName": {
		//	        "description": "监听器的名称。",
		//	        "type": "string"
		//	      },
		//	      "Port": {
		//	        "description": "监听器的端口。",
		//	        "format": "int64",
		//	        "maximum": 65535,
		//	        "minimum": 1,
		//	        "type": "integer"
		//	      },
		//	      "Protocol": {
		//	        "description": "监听器的协议。",
		//	        "enum": [
		//	          "TCP",
		//	          "UDP",
		//	          "HTTP",
		//	          "HTTPS"
		//	        ],
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"listeners": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: AclType
					"acl_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "监听器对本访问控制策略组的控制方式。white：白名单。监听器监听CLB的流量时，CLB仅转发其白名单关联访问控制策略组中IP地址的请求。black：黑名单。监听器监听CLB的流量时，对于黑名单关联访问控制策略组中IP地址的请求，CLB拒绝转发。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ListenerId
					"listener_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "监听器的ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ListenerName
					"listener_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "监听器的名称。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Port
					"port": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "监听器的端口。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Protocol
					"protocol": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "监听器的协议。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "访问控制策略组关联的监听器的详细信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": "default",
		//	  "description": "访问控制策略组所属项目的名称。不填默认为default。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "访问控制策略组所属项目的名称。不填默认为default。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ServiceManaged
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否为托管资源。true：是。false：否。",
		//	  "type": "boolean"
		//	}
		"service_managed": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否为托管资源。true：是。false：否。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组的状态。Creating：创建中。Active：正常可用。Configuring：配置中。Deleting：删除中。",
		//	  "enum": [
		//	    "Creating",
		//	    "Active",
		//	    "Configuring",
		//	    "Deleting"
		//	  ],
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "访问控制策略组的状态。Creating：创建中。Active：正常可用。Configuring：配置中。Deleting：删除中。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组标签的详细信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Key": {
		//	        "description": "用户标签的标签键。长度取值范围为1~128字符，允许输入各国语言文字、数字、空格（ ）、下划线（_）、点号（.）、半角冒号（:）、斜杠（/）、等号（=）、加号（+）、中划线（-）和@（@）。若标签键开头或结尾存在空格，系统会自动为其去除。",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "用户标签的标签值。允许输入各国语言文字、数字、空格（ ）、下划线（_）、点号（.）、半角冒号（:）、斜杠（/）、等号（=）、加号（+）、中划线（-）和@（@）。大小写敏感。若标签值开头或结尾存在空格，系统会自动为其去除。",
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签键。长度取值范围为1~128字符，允许输入各国语言文字、数字、空格（ ）、下划线（_）、点号（.）、半角冒号（:）、斜杠（/）、等号（=）、加号（+）、中划线（-）和@（@）。若标签键开头或结尾存在空格，系统会自动为其去除。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签值。允许输入各国语言文字、数字、空格（ ）、下划线（_）、点号（.）、半角冒号（:）、斜杠（/）、等号（=）、加号（+）、中划线（-）和@（@）。大小写敏感。若标签值开头或结尾存在空格，系统会自动为其去除。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "访问控制策略组标签的详细信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdateTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "访问控制策略组的最近操作时间。",
		//	  "type": "string"
		//	}
		"update_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "访问控制策略组的最近操作时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::CLB::ACL",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::CLB::ACL").WithTerraformTypeName("volcenginecc_clb_acl")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"acl_entries":     "AclEntries",
		"acl_entry_count": "AclEntryCount",
		"acl_id":          "AclId",
		"acl_name":        "AclName",
		"acl_type":        "AclType",
		"create_time":     "CreateTime",
		"description":     "Description",
		"entry":           "Entry",
		"key":             "Key",
		"listener_id":     "ListenerId",
		"listener_name":   "ListenerName",
		"listeners":       "Listeners",
		"port":            "Port",
		"project_name":    "ProjectName",
		"protocol":        "Protocol",
		"service_managed": "ServiceManaged",
		"status":          "Status",
		"tags":            "Tags",
		"update_time":     "UpdateTime",
		"value":           "Value",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
