// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package clb

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_clb_server_group", serverGroupDataSource)
}

// serverGroupDataSource returns the Terraform volcenginecc_clb_server_group data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::CLB::ServerGroup resource.
func serverGroupDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AddressIpVersion
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": "ipv4",
		//	  "description": "后端服务器组的IP地址类型。ipv4：后端服务器组为IPv4类型。ipv6：后端服务器组为IPv6类型。",
		//	  "enum": [
		//	    "ipv4",
		//	    "ipv6"
		//	  ],
		//	  "type": "string"
		//	}
		"address_ip_version": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "后端服务器组的IP地址类型。ipv4：后端服务器组为IPv4类型。ipv6：后端服务器组为IPv6类型。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AnyPortEnabled
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否开启全端口转发。on：开启全端口转发。off：关闭全端口转发。",
		//	  "enum": [
		//	    "on",
		//	    "off"
		//	  ],
		//	  "type": "string"
		//	}
		"any_port_enabled": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "是否开启全端口转发。on：开启全端口转发。off：关闭全端口转发。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreateTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "后端服务器组的创建时间。",
		//	  "type": "string"
		//	}
		"create_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "后端服务器组的创建时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "后端服务器组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个符。不填则默认为空字符串。",
		//	  "maxLength": 255,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "后端服务器组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个符。不填则默认为空字符串。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Listeners
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "后端服务器组关联的监听器信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "ListenerId": {
		//	        "description": "监听器的ID。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "ListenerId"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"listeners": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: ListenerId
					"listener_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "监听器的ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "后端服务器组关联的监听器信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LoadBalancerId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "后端服务器组所属的CLB实例ID。",
		//	  "type": "string"
		//	}
		"load_balancer_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "后端服务器组所属的CLB实例ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ServerGroupId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "后端服务器组的ID。",
		//	  "type": "string"
		//	}
		"server_group_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "后端服务器组的ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ServerGroupName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "后端服务器组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。限制为1 ～ 128个字符。不填默认为后端服务器组ID。",
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"server_group_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "后端服务器组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。限制为1 ～ 128个字符。不填默认为后端服务器组ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Servers
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "后端服务器组中服务器的信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "AnyPortEnabled": {
		//	        "default": "off",
		//	        "description": "是否开启全端口转发。on：开启。off（默认值）：关闭。",
		//	        "enum": [
		//	          "on",
		//	          "off"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "Description": {
		//	        "description": "后端服务器的描述。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255字符。不填则默认为空字符串。",
		//	        "maxLength": 255,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      },
		//	      "InstanceId": {
		//	        "description": "后端服务器。取值情况如下：当 Type 取ecs时，传云服务器实例的ID。当Type 取eni时，传已挂载至云服务器的辅助网卡的ID。当 Type 取ip时，传IP地址作为后端服务器。",
		//	        "type": "string"
		//	      },
		//	      "Ip": {
		//	        "description": "后端服务器的私网IP地址。多个后端服务器IP之间使用“\u0026”分隔。",
		//	        "type": "string"
		//	      },
		//	      "Port": {
		//	        "description": "后端服务器接收请求的端口号。取值范围为1～65535。",
		//	        "format": "int64",
		//	        "maximum": 65535,
		//	        "minimum": 1,
		//	        "type": "integer"
		//	      },
		//	      "ServerId": {
		//	        "description": "后端服务器ID。",
		//	        "type": "string"
		//	      },
		//	      "Type": {
		//	        "description": "后端服务器实例类型。当参数Type取instance时，取值如下：ecs：云服务器实例。eni：网卡。当参数Type取ip时，本参数取值为ip。",
		//	        "enum": [
		//	          "ecs",
		//	          "eni",
		//	          "ip"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "Weight": {
		//	        "default": 0,
		//	        "description": "后端服务器的权重，取值范围为0 ～ 100。不填则默认为0。0表示不会将请求转发给该后端服务器。",
		//	        "format": "int64",
		//	        "maximum": 100,
		//	        "minimum": 0,
		//	        "type": "integer"
		//	      }
		//	    },
		//	    "required": [
		//	      "InstanceId",
		//	      "Type",
		//	      "Ip"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"servers": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: AnyPortEnabled
					"any_port_enabled": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "是否开启全端口转发。on：开启。off（默认值）：关闭。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Description
					"description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "后端服务器的描述。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255字符。不填则默认为空字符串。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InstanceId
					"instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "后端服务器。取值情况如下：当 Type 取ecs时，传云服务器实例的ID。当Type 取eni时，传已挂载至云服务器的辅助网卡的ID。当 Type 取ip时，传IP地址作为后端服务器。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Ip
					"ip": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "后端服务器的私网IP地址。多个后端服务器IP之间使用“&”分隔。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Port
					"port": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "后端服务器接收请求的端口号。取值范围为1～65535。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ServerId
					"server_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "后端服务器ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Type
					"type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "后端服务器实例类型。当参数Type取instance时，取值如下：ecs：云服务器实例。eni：网卡。当参数Type取ip时，本参数取值为ip。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Weight
					"weight": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "后端服务器的权重，取值范围为0 ～ 100。不填则默认为0。0表示不会将请求转发给该后端服务器。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "后端服务器组中服务器的信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "标签信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Key": {
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "标签信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Type
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": "instance",
		//	  "description": "后端服务器组的类型。instance：表示该后端服务器组只能添加云服务器的主网卡或辅助网卡作为后端服务器。ip：表示该后端服务器组只能添加IP地址作为后端服务器。",
		//	  "enum": [
		//	    "instance",
		//	    "ip"
		//	  ],
		//	  "type": "string"
		//	}
		"type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "后端服务器组的类型。instance：表示该后端服务器组只能添加云服务器的主网卡或辅助网卡作为后端服务器。ip：表示该后端服务器组只能添加IP地址作为后端服务器。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdateTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "后端服务器组的最近操作时间。",
		//	  "type": "string"
		//	}
		"update_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "后端服务器组的最近操作时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::CLB::ServerGroup",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::CLB::ServerGroup").WithTerraformTypeName("volcenginecc_clb_server_group")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"address_ip_version": "AddressIpVersion",
		"any_port_enabled":   "AnyPortEnabled",
		"create_time":        "CreateTime",
		"description":        "Description",
		"instance_id":        "InstanceId",
		"ip":                 "Ip",
		"key":                "Key",
		"listener_id":        "ListenerId",
		"listeners":          "Listeners",
		"load_balancer_id":   "LoadBalancerId",
		"port":               "Port",
		"server_group_id":    "ServerGroupId",
		"server_group_name":  "ServerGroupName",
		"server_id":          "ServerId",
		"servers":            "Servers",
		"tags":               "Tags",
		"type":               "Type",
		"update_time":        "UpdateTime",
		"value":              "Value",
		"weight":             "Weight",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
