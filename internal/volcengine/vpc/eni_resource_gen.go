// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package vpc

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/boolplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/objectplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
	fwvalidators "github.com/volcengine/terraform-provider-volcenginecc/internal/validators"
)

func init() {
	registry.AddResourceFactory("volcenginecc_vpc_eni", eNIResource)
}

// eNIResource returns the Terraform volcenginecc_vpc_eni resource.
// This Terraform resource corresponds to the Cloud Control Volcengine::VPC::ENI resource.
func eNIResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AccountId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡所有者ID。",
		//	  "type": "string"
		//	}
		"account_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡所有者ID。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: CreatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡创建时间。",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡创建时间。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DeleteOnTermination
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否开启随云服务器实例删除，true为开启，false为不开启。",
		//	  "type": "boolean"
		//	}
		"delete_on_termination": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否开启随云服务器实例删除，true为开启，false为不开启。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// DeleteOnTermination is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。",
		//	  "maxLength": 255,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthAtMost(255),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: InstanceId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。",
		//	  "type": "string"
		//	}
		"instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Ipv6AddressCount
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。",
		//	  "format": "int64",
		//	  "type": "integer"
		//	}
		"ipv_6_address_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// Ipv6AddressCount is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: Ipv6Sets
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"ipv_6_sets": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: MacAddress
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡的MAC地址。",
		//	  "type": "string"
		//	}
		"mac_address": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡的MAC地址。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: NetworkInterfaceId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡ID。",
		//	  "type": "string"
		//	}
		"network_interface_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡ID。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: NetworkInterfaceName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。",
		//	  "maxLength": 128,
		//	  "type": "string"
		//	}
		"network_interface_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthAtMost(128),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PortSecurityEnabled
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。",
		//	  "type": "boolean"
		//	}
		"port_security_enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PrimaryIpAddress
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。",
		//	  "properties": {
		//	    "AssociatedElasticIp": {
		//	      "description": "网卡主私网IPv4关联的公网IP的信息。",
		//	      "properties": {
		//	        "AllocationId": {
		//	          "description": "公网IP的ID。",
		//	          "type": "string"
		//	        },
		//	        "EipAddress": {
		//	          "description": "公网IP的地址。",
		//	          "type": "string"
		//	        },
		//	        "ReleaseWithInstance": {
		//	          "description": "公网IP是否随云服务器实例删除。仅主网卡的主私网IP绑定按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放，true：是，false：否。",
		//	          "type": "boolean"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "Primary": {
		//	      "description": "是否为主私网IPv4地址。",
		//	      "type": "boolean"
		//	    },
		//	    "PrivateIpAddress": {
		//	      "description": "网卡的私网IP地址。",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"primary_ip_address": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: AssociatedElasticIp
				"associated_elastic_ip": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AllocationId
						"allocation_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "公网IP的ID。",
							Optional:    true,
							Computed:    true,
							PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
								stringplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: EipAddress
						"eip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "公网IP的地址。",
							Computed:    true,
							PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
								stringplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: ReleaseWithInstance
						"release_with_instance": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Description: "公网IP是否随云服务器实例删除。仅主网卡的主私网IP绑定按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放，true：是，false：否。",
							Computed:    true,
							PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
								boolplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "网卡主私网IPv4关联的公网IP的信息。",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
						objectplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: Primary
				"primary": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "是否为主私网IPv4地址。",
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: PrivateIpAddress
				"private_ip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "网卡的私网IP地址。",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
						stringplanmodifier.RequiresReplaceIfConfigured(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PrivateIpSets
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡的私网IPv4地址列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "AssociatedElasticIp": {
		//	        "description": "网卡主私网IPv4关联的公网IP的信息。",
		//	        "properties": {
		//	          "AllocationId": {
		//	            "description": "公网IP的ID。",
		//	            "type": "string"
		//	          },
		//	          "EipAddress": {
		//	            "description": "公网IP的地址。",
		//	            "type": "string"
		//	          },
		//	          "ReleaseWithInstance": {
		//	            "description": "公网IP是否随云服务器实例删除。仅主网卡的主私网IP绑定按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放，true：是，false：否。",
		//	            "type": "boolean"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "Primary": {
		//	        "description": "是否为主私网IPv4地址。",
		//	        "type": "boolean"
		//	      },
		//	      "PrivateIpAddress": {
		//	        "description": "网卡的私网IP地址。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"private_ip_sets": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: AssociatedElasticIp
					"associated_elastic_ip": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: AllocationId
							"allocation_id": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "公网IP的ID。",
								Optional:    true,
								Computed:    true,
								PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
									stringplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: EipAddress
							// Property: ReleaseWithInstance
						}, /*END SCHEMA*/
						Description: "网卡主私网IPv4关联的公网IP的信息。",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
							objectplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Primary
					// Property: PrivateIpAddress
					"private_ip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "网卡的私网IP地址。",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "网卡的私网IPv4地址列表。\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡所属项目的名称。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡所属项目的名称。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: SecondaryPrivateIpAddressCount
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。",
		//	  "format": "int64",
		//	  "maximum": 49,
		//	  "type": "integer"
		//	}
		"secondary_private_ip_address_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.Int64{ /*START VALIDATORS*/
				int64validator.AtMost(49),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// SecondaryPrivateIpAddressCount is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: SecurityGroupIds
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "辅助网卡加入一个或多个安全组的ID。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"security_group_ids": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "辅助网卡加入一个或多个安全组的ID。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ServiceManaged
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否为火山引擎官方服务网卡，true为是，false为否。",
		//	  "type": "boolean"
		//	}
		"service_managed": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否为火山引擎官方服务网卡，true为是，false为否。",
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡的绑定状态。",
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡的绑定状态。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: SubnetId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "辅助网卡所在子网的ID。",
		//	  "type": "string"
		//	}
		"subnet_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "辅助网卡所在子网的ID。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "标签。",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "用户标签的标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "用户标签的标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签键。",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签值。",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Optional: true,
			Computed: true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Type
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡类型。primary：主网卡，secondary：辅助网卡",
		//	  "type": "string"
		//	}
		"type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡类型。primary：主网卡，secondary：辅助网卡",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: UpdatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "更新网卡的时间。",
		//	  "type": "string"
		//	}
		"updated_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "更新网卡的时间。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VpcId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡所属的VPC的ID。",
		//	  "type": "string"
		//	}
		"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡所属的VPC的ID。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VpcName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡所属VPC的名称。",
		//	  "type": "string"
		//	}
		"vpc_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡所属VPC的名称。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ZoneId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "网卡所属可用区的ID。",
		//	  "type": "string"
		//	}
		"zone_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "网卡所属可用区的ID。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to Cloud Control primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "网卡即虚拟网卡。在私有网络里，网卡是挂载在云服务器、负载均衡等云资源上的一种网络接口。每张网卡均有一个主私网IP地址。若有需要，可手动为其分配多个辅助私网IP地址。",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::VPC::ENI").WithTerraformTypeName("volcenginecc_vpc_eni")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"account_id":                         "AccountId",
		"allocation_id":                      "AllocationId",
		"associated_elastic_ip":              "AssociatedElasticIp",
		"created_time":                       "CreatedTime",
		"delete_on_termination":              "DeleteOnTermination",
		"description":                        "Description",
		"eip_address":                        "EipAddress",
		"instance_id":                        "InstanceId",
		"ipv_6_address_count":                "Ipv6AddressCount",
		"ipv_6_sets":                         "Ipv6Sets",
		"key":                                "Key",
		"mac_address":                        "MacAddress",
		"network_interface_id":               "NetworkInterfaceId",
		"network_interface_name":             "NetworkInterfaceName",
		"port_security_enabled":              "PortSecurityEnabled",
		"primary":                            "Primary",
		"primary_ip_address":                 "PrimaryIpAddress",
		"private_ip_address":                 "PrivateIpAddress",
		"private_ip_sets":                    "PrivateIpSets",
		"project_name":                       "ProjectName",
		"release_with_instance":              "ReleaseWithInstance",
		"secondary_private_ip_address_count": "SecondaryPrivateIpAddressCount",
		"security_group_ids":                 "SecurityGroupIds",
		"service_managed":                    "ServiceManaged",
		"status":                             "Status",
		"subnet_id":                          "SubnetId",
		"tags":                               "Tags",
		"type":                               "Type",
		"updated_time":                       "UpdatedTime",
		"value":                              "Value",
		"vpc_id":                             "VpcId",
		"vpc_name":                           "VpcName",
		"zone_id":                            "ZoneId",
	})

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/DeleteOnTermination",
		"/properties/Ipv6AddressCount",
		"/properties/SecondaryPrivateIpAddressCount",
	})

	opts = opts.WithReadOnlyPropertyPaths([]string{
		"/properties/AccountId",
		"/properties/MacAddress",
		"/properties/NetworkInterfaceId",
		"/properties/ServiceManaged",
		"/properties/Status",
		"/properties/Type",
		"/properties/UpdatedTime",
		"/properties/CreatedTime",
		"/properties/VpcId",
		"/properties/VpcName",
		"/properties/PrivateIpSets/*/Primary",
		"/properties/PrivateIpSets/*/AssociatedElasticIp/EipAddress",
		"/properties/PrivateIpSets/*/AssociatedElasticIp/ReleaseWithInstance",
		"/properties/PrimaryIpAddress/Primary",
		"/properties/PrimaryIpAddress/AssociatedElasticIp/EipAddress",
		"/properties/PrimaryIpAddress/AssociatedElasticIp/ReleaseWithInstance",
	})

	opts = opts.WithCreateOnlyPropertyPaths([]string{
		"/properties/ProjectName",
		"/properties/SubnetId",
		"/properties/PrimaryIpAddress/PrivateIpAddress",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
