// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package vpc

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
	fwvalidators "github.com/volcengine/terraform-provider-volcenginecc/internal/validators"
)

func init() {
	registry.AddResourceFactory("volcenginecc_vpc_prefix_list", prefixListResource)
}

// prefixListResource returns the Terraform volcenginecc_vpc_prefix_list resource.
// This Terraform resource corresponds to the Cloud Control Volcengine::VPC::PrefixList resource.
func prefixListResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AssociationCount
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表关联的资源数量。",
		//	  "format": "int64",
		//	  "type": "integer"
		//	}
		"association_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "前缀列表关联的资源数量。",
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: AssociationsRouteTables
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表关联的路由表信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "ResourceId": {
		//	        "description": "关联资源的ID。",
		//	        "type": "string"
		//	      },
		//	      "ResourceType": {
		//	        "description": "关联资源的类型。VpcRouteTable：路由表；VpcSecurityGroup：安全组。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"associations_route_tables": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: ResourceId
					"resource_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "关联资源的ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ResourceType
					"resource_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "关联资源的类型。VpcRouteTable：路由表；VpcSecurityGroup：安全组。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "前缀列表关联的路由表信息。\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: AssociationsSecurityGroups
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表关联的安全组信息。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "ResourceId": {
		//	        "description": "关联资源的ID。",
		//	        "type": "string"
		//	      },
		//	      "ResourceType": {
		//	        "description": "关联资源的类型。VpcRouteTable：路由表；VpcSecurityGroup：安全组。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"associations_security_groups": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: ResourceId
					"resource_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "关联资源的ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ResourceType
					"resource_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "关联资源的类型。VpcRouteTable：路由表；VpcSecurityGroup：安全组。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "前缀列表关联的安全组信息。\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: CreatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表的创建时间。",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "前缀列表的创建时间。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。",
		//	  "maxLength": 255,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthAtMost(255),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: IpVersion
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": "IPv4",
		//	  "description": "IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。",
		//	  "type": "string"
		//	}
		"ip_version": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。",
			Optional:    true,
			Computed:    true,
			Default:     stringdefault.StaticString("IPv4"),
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: MaxEntries
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。",
		//	  "format": "int64",
		//	  "maxLength": 200,
		//	  "minLength": 1,
		//	  "type": "integer"
		//	}
		"max_entries": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。",
			Required:    true,
		}, /*END ATTRIBUTE*/
		// Property: PrefixListEntries
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表条目的CIDR。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Cidr": {
		//	        "description": "前缀列表条目的CIDR。",
		//	        "type": "string"
		//	      },
		//	      "Description": {
		//	        "description": "前缀列表条目的描述。长度限制为0~255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。",
		//	        "maxLength": 255,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Cidr"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"prefix_list_entries": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Cidr
					"cidr": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "前缀列表条目的CIDR。",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Description
					"description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "前缀列表条目的描述。长度限制为0~255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthAtMost(255),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "前缀列表条目的CIDR。\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PrefixListId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表的ID。",
		//	  "type": "string"
		//	}
		"prefix_list_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "前缀列表的ID。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PrefixListName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。",
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"prefix_list_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthBetween(1, 128),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": "default",
		//	  "description": "前缀列表所属项目的名称，不填默认加入default项目。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "前缀列表所属项目的名称，不填默认加入default项目。",
			Optional:    true,
			Computed:    true,
			Default:     stringdefault.StaticString("default"),
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。",
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "标签列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Key": {
		//	        "description": "用户标签的标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "用户标签的标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签键。",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签值。",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "标签列表。\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: UpdatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "前缀列表的最近一次修改时间。",
		//	  "type": "string"
		//	}
		"updated_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "前缀列表的最近一次修改时间。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to Cloud Control primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "前缀列表是一组CIDR地址块的集合，用于简化安全组规则、路由表条目的配置。当前缀列表修改时，所有关联它的资源均会同步修改。",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::VPC::PrefixList").WithTerraformTypeName("volcenginecc_vpc_prefix_list")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"association_count":            "AssociationCount",
		"associations_route_tables":    "AssociationsRouteTables",
		"associations_security_groups": "AssociationsSecurityGroups",
		"cidr":                         "Cidr",
		"created_time":                 "CreatedTime",
		"description":                  "Description",
		"ip_version":                   "IpVersion",
		"key":                          "Key",
		"max_entries":                  "MaxEntries",
		"prefix_list_entries":          "PrefixListEntries",
		"prefix_list_id":               "PrefixListId",
		"prefix_list_name":             "PrefixListName",
		"project_name":                 "ProjectName",
		"resource_id":                  "ResourceId",
		"resource_type":                "ResourceType",
		"status":                       "Status",
		"tags":                         "Tags",
		"updated_time":                 "UpdatedTime",
		"value":                        "Value",
	})

	opts = opts.WithReadOnlyPropertyPaths([]string{
		"/properties/AssociationCount",
		"/properties/CreatedTime",
		"/properties/UpdatedTime",
		"/properties/PrefixListId",
		"/properties/Status",
		"/properties/AssociationsSecurityGroups",
		"/properties/AssociationsRouteTables",
	})

	opts = opts.WithCreateOnlyPropertyPaths([]string{
		"/properties/IpVersion",
		"/properties/ProjectName",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
