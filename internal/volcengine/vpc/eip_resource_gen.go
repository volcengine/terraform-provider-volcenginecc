// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package vpc

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/boolplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
	fwvalidators "github.com/volcengine/terraform-provider-volcenginecc/internal/validators"
)

func init() {
	registry.AddResourceFactory("volcenginecc_vpc_eip", eIPResource)
}

// eIPResource returns the Terraform volcenginecc_vpc_eip resource.
// This Terraform resource corresponds to the Cloud Control Volcengine::VPC::EIP resource.
func eIPResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AllocationId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP的ID。",
		//	  "type": "string"
		//	}
		"allocation_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP的ID。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Bandwidth
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": 1,
		//	  "description": "公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。",
		//	  "maximum": 500,
		//	  "minimum": 1,
		//	  "type": "integer"
		//	}
		"bandwidth": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。",
			Optional:    true,
			Computed:    true,
			Default:     int64default.StaticInt64(1),
			Validators: []validator.Int64{ /*START VALIDATORS*/
				int64validator.Between(1, 500),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: BandwidthPackageId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。",
		//	  "type": "string"
		//	}
		"bandwidth_package_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: BillingType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。",
		//	  "enum": [
		//	    1,
		//	    2,
		//	    3
		//	  ],
		//	  "type": "integer"
		//	}
		"billing_type": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。",
			Required:    true,
			Validators: []validator.Int64{ /*START VALIDATORS*/
				int64validator.OneOf(
					1,
					2,
					3,
				),
			}, /*END VALIDATORS*/
		}, /*END ATTRIBUTE*/
		// Property: BusinessStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。",
		//	  "enum": [
		//	    "Normal",
		//	    "FinancialLocked"
		//	  ],
		//	  "type": "string"
		//	}
		"business_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: CreatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP的创建时间。",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP的创建时间。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DeletedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。",
		//	  "type": "string"
		//	}
		"deleted_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP的描述信息。",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP的描述信息。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DirectMode
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。",
		//	  "type": "boolean"
		//	}
		"direct_mode": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: EipAddress
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP地址。",
		//	  "type": "string"
		//	}
		"eip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP地址。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ExpiredTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。",
		//	  "type": "string"
		//	}
		"expired_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ISP
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine_BGP：BGP单线。Fusion_BGP：融合BGP。ChinaMobile_Value：中国移动惠选型静态单线。ChinaUnicom_Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。",
		//	  "enum": [
		//	    "BGP",
		//	    "SingleLine_BGP",
		//	    "Fusion_BGP",
		//	    "ChinaMobile",
		//	    "ChinaTelecom",
		//	    "ChinaUnicom",
		//	    "ChinaMobile_Value",
		//	    "ChinaUnicom_Value",
		//	    "ChinaTelecom_Value"
		//	  ],
		//	  "type": "string"
		//	}
		"isp": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine_BGP：BGP单线。Fusion_BGP：融合BGP。ChinaMobile_Value：中国移动惠选型静态单线。ChinaUnicom_Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"BGP",
					"SingleLine_BGP",
					"Fusion_BGP",
					"ChinaMobile",
					"ChinaTelecom",
					"ChinaUnicom",
					"ChinaMobile_Value",
					"ChinaUnicom_Value",
					"ChinaTelecom_Value",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: InstanceId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "当前绑定的实例ID。",
		//	  "type": "string"
		//	}
		"instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "当前绑定的实例ID。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: InstanceType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。",
		//	  "enum": [
		//	    "Nat",
		//	    "NetworkInterface",
		//	    "ClbInstance",
		//	    "EcsInstance",
		//	    "HaVip",
		//	    ""
		//	  ],
		//	  "type": "string"
		//	}
		"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"Nat",
					"NetworkInterface",
					"ClbInstance",
					"EcsInstance",
					"HaVip",
					"",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: IpAddress
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址",
		//	  "type": "string"
		//	}
		"ip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// IpAddress is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: IpAddressPoolId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "IP地址池的ID。",
		//	  "type": "string"
		//	}
		"ip_address_pool_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "IP地址池的ID。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: IsBlocked
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否被封禁。true：是。false：否。",
		//	  "type": "boolean"
		//	}
		"is_blocked": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否被封禁。true：是。false：否。",
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: LockReason
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。",
		//	  "type": "string"
		//	}
		"lock_reason": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Name
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP的名称。",
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP的名称。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: OverdueTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。",
		//	  "type": "string"
		//	}
		"overdue_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Period
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。",
		//	  "type": "integer"
		//	}
		"period": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// Period is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: PeriodUnit
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。",
		//	  "enum": [
		//	    1,
		//	    2
		//	  ],
		//	  "type": "integer"
		//	}
		"period_unit": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.Int64{ /*START VALIDATORS*/
				int64validator.OneOf(
					1,
					2,
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// PeriodUnit is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: PrivateIpAddress
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。",
		//	  "type": "string"
		//	}
		"private_ip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": "default",
		//	  "description": "公网IP所属项目的名称。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP所属项目的名称。",
			Optional:    true,
			Computed:    true,
			Default:     stringdefault.StaticString("default"),
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ReleaseWithInstance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。",
		//	  "type": "boolean"
		//	}
		"release_with_instance": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: RenewPeriodTimes
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes",
		//	  "type": "integer"
		//	}
		"renew_period_times": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// RenewPeriodTimes is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: RenewType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。",
		//	  "enum": [
		//	    1,
		//	    2,
		//	    3
		//	  ],
		//	  "type": "integer"
		//	}
		"renew_type": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.Int64{ /*START VALIDATORS*/
				int64validator.OneOf(
					1,
					2,
					3,
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// RenewType is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: SecurityProtectionInstanceId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。",
		//	  "type": "integer"
		//	}
		"security_protection_instance_id": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// SecurityProtectionInstanceId is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: SecurityProtectionTypes
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"security_protection_types": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
				setplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ServiceManaged
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否由服务管理",
		//	  "type": "boolean"
		//	}
		"service_managed": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否由服务管理",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。",
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "公网IP的标签信息",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "用户标签。",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签键。",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签值。",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "公网IP的标签信息\n 特别提示: 在使用 ListNestedAttribute 或 SetNestedAttribute 时，必须完整定义其嵌套结构体的所有属性。若定义不完整，Terraform 在执行计划对比时可能会检测到意料之外的差异，从而触发不必要的资源更新，影响资源的稳定性与可预测性。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: UpdatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "更新公网IP的时间。",
		//	  "type": "string"
		//	}
		"updated_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "更新公网IP的时间。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to Cloud Control primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "公网IP（Elastic IP Address，EIP）及其公网出口带宽，是火山引擎为云资源提供的可独立购买和持有的IP连通服务。公网IP支持直接绑定云服务器（包括ECS云服务器、EBM裸金属服务器、GPU云服务器），还支持绑定公网NAT网关、负载均衡、辅助网卡等组件，为云服务器提供公网互通能力。",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::VPC::EIP").WithTerraformTypeName("volcenginecc_vpc_eip")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"allocation_id":                   "AllocationId",
		"bandwidth":                       "Bandwidth",
		"bandwidth_package_id":            "BandwidthPackageId",
		"billing_type":                    "BillingType",
		"business_status":                 "BusinessStatus",
		"created_time":                    "CreatedTime",
		"deleted_time":                    "DeletedTime",
		"description":                     "Description",
		"direct_mode":                     "DirectMode",
		"eip_address":                     "EipAddress",
		"expired_time":                    "ExpiredTime",
		"instance_id":                     "InstanceId",
		"instance_type":                   "InstanceType",
		"ip_address":                      "IpAddress",
		"ip_address_pool_id":              "IpAddressPoolId",
		"is_blocked":                      "IsBlocked",
		"isp":                             "ISP",
		"key":                             "Key",
		"lock_reason":                     "LockReason",
		"name":                            "Name",
		"overdue_time":                    "OverdueTime",
		"period":                          "Period",
		"period_unit":                     "PeriodUnit",
		"private_ip_address":              "PrivateIpAddress",
		"project_name":                    "ProjectName",
		"release_with_instance":           "ReleaseWithInstance",
		"renew_period_times":              "RenewPeriodTimes",
		"renew_type":                      "RenewType",
		"security_protection_instance_id": "SecurityProtectionInstanceId",
		"security_protection_types":       "SecurityProtectionTypes",
		"service_managed":                 "ServiceManaged",
		"status":                          "Status",
		"tags":                            "Tags",
		"updated_time":                    "UpdatedTime",
		"value":                           "Value",
	})

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/Period",
		"/properties/IpAddress",
		"/properties/PeriodUnit",
		"/properties/RenewType",
		"/properties/RenewPeriodTimes",
		"/properties/SecurityProtectionInstanceId",
	})

	opts = opts.WithReadOnlyPropertyPaths([]string{
		"/properties/AllocationId",
		"/properties/CreatedTime",
		"/properties/BusinessStatus",
		"/properties/DeletedTime",
		"/properties/EipAddress",
		"/properties/ExpiredTime",
		"/properties/Status",
		"/properties/IsBlocked",
		"/properties/LockReason",
		"/properties/OverdueTime",
		"/properties/UpdatedTime",
	})

	opts = opts.WithCreateOnlyPropertyPaths([]string{
		"/properties/Isp",
		"/properties/BandwidthPackageId",
		"/properties/ProjectName",
		"/properties/IpAddressPoolId",
		"/properties/SecurityProtectionTypes",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
