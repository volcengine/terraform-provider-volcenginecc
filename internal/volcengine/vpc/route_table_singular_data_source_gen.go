// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package vpc

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_vpc_route_table", routeTableDataSource)
}

// routeTableDataSource returns the Terraform volcenginecc_vpc_route_table data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::VPC::RouteTable resource.
func routeTableDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AccountId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表所属账号的ID。",
		//	  "type": "string"
		//	}
		"account_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表所属账号的ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AssociateType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。",
		//	  "enum": [
		//	    "Subnet",
		//	    "Gateway"
		//	  ],
		//	  "type": "string"
		//	}
		"associate_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表创建时间。",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表创建时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CustomRouteEntries
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表关联的自定义路由条目列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Description": {
		//	        "description": "路由条目描述。",
		//	        "maxLength": 255,
		//	        "type": "string"
		//	      },
		//	      "DestinationCidrBlock": {
		//	        "description": "路由条目的目标网段。",
		//	        "type": "string"
		//	      },
		//	      "DestinationPrefixListId": {
		//	        "description": "前缀列表ID。",
		//	        "type": "string"
		//	      },
		//	      "NextHopId": {
		//	        "description": "下一跳资源ID。",
		//	        "type": "string"
		//	      },
		//	      "NextHopName": {
		//	        "description": "路由条目下一跳资源的名称。",
		//	        "type": "string"
		//	      },
		//	      "NextHopType": {
		//	        "description": "自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。",
		//	        "type": "string"
		//	      },
		//	      "PrefixListCidrBlocks": {
		//	        "description": "前缀列表的CIDR。",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "type": "string"
		//	        },
		//	        "type": "array",
		//	        "uniqueItems": true
		//	      },
		//	      "RouteEntryId": {
		//	        "description": "路由条目ID。",
		//	        "type": "string"
		//	      },
		//	      "RouteEntryName": {
		//	        "description": "路由条目名称。",
		//	        "type": "string"
		//	      },
		//	      "RouteTableId": {
		//	        "description": "路由表ID。",
		//	        "type": "string"
		//	      },
		//	      "Status": {
		//	        "description": "路由条目状态。1、Pending：待创建。2、Available：可用。",
		//	        "type": "string"
		//	      },
		//	      "Type": {
		//	        "description": "路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。",
		//	        "enum": [
		//	          "Custom",
		//	          "System"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "VpcId": {
		//	        "description": "路由条目所属私有网络的ID。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"custom_route_entries": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Description
					"description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目描述。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: DestinationCidrBlock
					"destination_cidr_block": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目的目标网段。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: DestinationPrefixListId
					"destination_prefix_list_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "前缀列表ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: NextHopId
					"next_hop_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "下一跳资源ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: NextHopName
					"next_hop_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目下一跳资源的名称。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: NextHopType
					"next_hop_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PrefixListCidrBlocks
					"prefix_list_cidr_blocks": schema.SetAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "前缀列表的CIDR。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: RouteEntryId
					"route_entry_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: RouteEntryName
					"route_entry_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目名称。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: RouteTableId
					"route_table_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由表ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Status
					"status": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目状态。1、Pending：待创建。2、Available：可用。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Type
					"type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: VpcId
					"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目所属私有网络的ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "路由表关联的自定义路由条目列表。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表描述信息。",
		//	  "maxLength": 255,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表描述信息。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ipv4GatewayId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "关联路由表的IPv4网关ID。",
		//	  "type": "string"
		//	}
		"ipv_4_gateway_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "关联路由表的IPv4网关ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ipv6GatewayId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "关联路由表的IPv6网关ID。",
		//	  "type": "string"
		//	}
		"ipv_6_gateway_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "关联路由表的IPv6网关ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表所属项目的名称。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表所属项目的名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RouteTableId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表ID。",
		//	  "type": "string"
		//	}
		"route_table_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RouteTableName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表名称。",
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"route_table_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RouteTableType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表类型。1、Custom：自定义路由表。2、System：系统路由表。",
		//	  "enum": [
		//	    "Custom",
		//	    "System"
		//	  ],
		//	  "type": "string"
		//	}
		"route_table_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表类型。1、Custom：自定义路由表。2、System：系统路由表。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SubnetIds
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "关联的子网的ID列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"subnet_ids": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "关联的子网的ID列表。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SystemRouteEntries
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表关联的系统默认路由条目列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Description": {
		//	        "description": "路由条目描述。",
		//	        "maxLength": 255,
		//	        "type": "string"
		//	      },
		//	      "DestinationCidrBlock": {
		//	        "description": "路由条目的目标网段。",
		//	        "type": "string"
		//	      },
		//	      "DestinationPrefixListId": {
		//	        "description": "前缀列表ID。",
		//	        "type": "string"
		//	      },
		//	      "NextHopId": {
		//	        "description": "下一跳资源ID。",
		//	        "type": "string"
		//	      },
		//	      "NextHopName": {
		//	        "description": "路由条目下一跳资源的名称。",
		//	        "type": "string"
		//	      },
		//	      "NextHopType": {
		//	        "description": "自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。",
		//	        "type": "string"
		//	      },
		//	      "PrefixListCidrBlocks": {
		//	        "description": "前缀列表的CIDR。",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "type": "string"
		//	        },
		//	        "type": "array",
		//	        "uniqueItems": true
		//	      },
		//	      "RouteEntryId": {
		//	        "description": "路由条目ID。",
		//	        "type": "string"
		//	      },
		//	      "RouteEntryName": {
		//	        "description": "路由条目名称。",
		//	        "type": "string"
		//	      },
		//	      "RouteTableId": {
		//	        "description": "路由表ID。",
		//	        "type": "string"
		//	      },
		//	      "Status": {
		//	        "description": "路由条目状态。1、Pending：待创建。2、Available：可用。",
		//	        "type": "string"
		//	      },
		//	      "Type": {
		//	        "description": "路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。",
		//	        "enum": [
		//	          "Custom",
		//	          "System"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "VpcId": {
		//	        "description": "路由条目所属私有网络的ID。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"system_route_entries": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Description
					"description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目描述。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: DestinationCidrBlock
					"destination_cidr_block": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目的目标网段。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: DestinationPrefixListId
					"destination_prefix_list_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "前缀列表ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: NextHopId
					"next_hop_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "下一跳资源ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: NextHopName
					"next_hop_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目下一跳资源的名称。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: NextHopType
					"next_hop_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PrefixListCidrBlocks
					"prefix_list_cidr_blocks": schema.SetAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "前缀列表的CIDR。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: RouteEntryId
					"route_entry_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: RouteEntryName
					"route_entry_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目名称。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: RouteTableId
					"route_table_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由表ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Status
					"status": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目状态。1、Pending：待创建。2、Available：可用。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Type
					"type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: VpcId
					"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "路由条目所属私有网络的ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "路由表关联的系统默认路由条目列表。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "标签列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Key": {
		//	        "description": "用户标签的标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "用户标签的标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签键。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "标签列表。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表更新时间。",
		//	  "type": "string"
		//	}
		"updated_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表更新时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VpcId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由表所属VPC的ID。",
		//	  "type": "string"
		//	}
		"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由表所属VPC的ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VpcName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "VPC的名称。",
		//	  "type": "string"
		//	}
		"vpc_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "VPC的名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::VPC::RouteTable",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::VPC::RouteTable").WithTerraformTypeName("volcenginecc_vpc_route_table")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"account_id":                 "AccountId",
		"associate_type":             "AssociateType",
		"created_time":               "CreatedTime",
		"custom_route_entries":       "CustomRouteEntries",
		"description":                "Description",
		"destination_cidr_block":     "DestinationCidrBlock",
		"destination_prefix_list_id": "DestinationPrefixListId",
		"ipv_4_gateway_id":           "Ipv4GatewayId",
		"ipv_6_gateway_id":           "Ipv6GatewayId",
		"key":                        "Key",
		"next_hop_id":                "NextHopId",
		"next_hop_name":              "NextHopName",
		"next_hop_type":              "NextHopType",
		"prefix_list_cidr_blocks":    "PrefixListCidrBlocks",
		"project_name":               "ProjectName",
		"route_entry_id":             "RouteEntryId",
		"route_entry_name":           "RouteEntryName",
		"route_table_id":             "RouteTableId",
		"route_table_name":           "RouteTableName",
		"route_table_type":           "RouteTableType",
		"status":                     "Status",
		"subnet_ids":                 "SubnetIds",
		"system_route_entries":       "SystemRouteEntries",
		"tags":                       "Tags",
		"type":                       "Type",
		"updated_time":               "UpdatedTime",
		"value":                      "Value",
		"vpc_id":                     "VpcId",
		"vpc_name":                   "VpcName",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
