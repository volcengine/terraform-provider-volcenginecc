// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package vpc

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_vpc_bandwidth_package", bandwidthPackageDataSource)
}

// bandwidthPackageDataSource returns the Terraform volcenginecc_vpc_bandwidth_package data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::VPC::BandwidthPackage resource.
func bandwidthPackageDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Bandwidth
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。",
		//	  "format": "int64",
		//	  "maximum": 5000,
		//	  "minimum": 2,
		//	  "type": "integer"
		//	}
		"bandwidth": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: BandwidthPackageId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "带宽包ID",
		//	  "type": "string"
		//	}
		"bandwidth_package_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "带宽包ID",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: BandwidthPackageName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。",
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"bandwidth_package_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: BillingType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。",
		//	  "format": "int64",
		//	  "maximum": 4,
		//	  "minimum": 1,
		//	  "type": "integer"
		//	}
		"billing_type": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: BusinessStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "计费状态",
		//	  "type": "string"
		//	}
		"business_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "计费状态",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "创建时间",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "创建时间",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DeletedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "删除时间",
		//	  "type": "string"
		//	}
		"deleted_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "删除时间",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。",
		//	  "maxLength": 255,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: EipAddresses
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "加入共享带宽包的公网IP信息列表。必须同时满足如下条件：1、二者线路类型相同。2、二者安全防护类型相同。3、二者地域相同。4、公网IP或IPv6公网带宽为按量计费。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "AllocationId": {
		//	        "description": "分配ID",
		//	        "type": "string"
		//	      },
		//	      "EipAddress": {
		//	        "description": "弹性IP地址",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "AllocationId"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"eip_addresses": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: AllocationId
					"allocation_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "分配ID",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: EipAddress
					"eip_address": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "弹性IP地址",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "加入共享带宽包的公网IP信息列表。必须同时满足如下条件：1、二者线路类型相同。2、二者安全防护类型相同。3、二者地域相同。4、公网IP或IPv6公网带宽为按量计费。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: EnableDualStack
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。",
		//	  "type": "boolean"
		//	}
		"enable_dual_stack": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ExpiredTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "过期时间",
		//	  "type": "string"
		//	}
		"expired_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "过期时间",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ISP
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine_BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium_BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion_BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile_Value：中国移动惠选型静态单线。5.2、ChinaUnicom_Value：中国联通惠选型静态单线。5.3、ChinaTelecom_Value：中国电信惠选型静态单线。",
		//	  "enum": [
		//	    "BGP",
		//	    "SingleLine_BGP",
		//	    "Premium_BGP",
		//	    "Fusion_BGP",
		//	    "ChinaMobile",
		//	    "ChinaUnicom",
		//	    "ChinaTelecom",
		//	    "ChinaMobile_Value",
		//	    "ChinaUnicom_Value",
		//	    "ChinaTelecom_Value"
		//	  ],
		//	  "type": "string"
		//	}
		"isp": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine_BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium_BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion_BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile_Value：中国移动惠选型静态单线。5.2、ChinaUnicom_Value：中国联通惠选型静态单线。5.3、ChinaTelecom_Value：中国电信惠选型静态单线。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OverdueTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "欠费时间",
		//	  "type": "string"
		//	}
		"overdue_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "欠费时间",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Period
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。",
		//	  "format": "int64",
		//	  "type": "integer"
		//	}
		"period": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: PeriodUnit
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。",
		//	  "enum": [
		//	    1,
		//	    2
		//	  ],
		//	  "format": "int64",
		//	  "type": "integer"
		//	}
		"period_unit": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "项目名称，不填默认加入default项目。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "项目名称，不填默认加入default项目。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Protocol
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack",
		//	  "type": "string"
		//	}
		"protocol": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ratio
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。",
		//	  "format": "int64",
		//	  "type": "integer"
		//	}
		"ratio": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SecurityProtectionTypes
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"security_protection_types": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。",
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "标签列表。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Key": {
		//	        "description": "用户标签的标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "用户标签的标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签键。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "标签列表。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "更新时间",
		//	  "type": "string"
		//	}
		"updated_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "更新时间",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::VPC::BandwidthPackage",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::VPC::BandwidthPackage").WithTerraformTypeName("volcenginecc_vpc_bandwidth_package")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"allocation_id":             "AllocationId",
		"bandwidth":                 "Bandwidth",
		"bandwidth_package_id":      "BandwidthPackageId",
		"bandwidth_package_name":    "BandwidthPackageName",
		"billing_type":              "BillingType",
		"business_status":           "BusinessStatus",
		"created_time":              "CreatedTime",
		"deleted_time":              "DeletedTime",
		"description":               "Description",
		"eip_address":               "EipAddress",
		"eip_addresses":             "EipAddresses",
		"enable_dual_stack":         "EnableDualStack",
		"expired_time":              "ExpiredTime",
		"isp":                       "ISP",
		"key":                       "Key",
		"overdue_time":              "OverdueTime",
		"period":                    "Period",
		"period_unit":               "PeriodUnit",
		"project_name":              "ProjectName",
		"protocol":                  "Protocol",
		"ratio":                     "Ratio",
		"security_protection_types": "SecurityProtectionTypes",
		"status":                    "Status",
		"tags":                      "Tags",
		"updated_time":              "UpdatedTime",
		"value":                     "Value",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
