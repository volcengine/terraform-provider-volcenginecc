// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package vpc

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_vpc_security_group", securityGroupDataSource)
}

// securityGroupDataSource returns the Terraform volcenginecc_vpc_security_group data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::VPC::SecurityGroup resource.
func securityGroupDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: CreationTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组创建时间。",
		//	  "type": "string"
		//	}
		"creation_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "安全组创建时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。",
		//	  "maxLength": 255,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: EgressPermissions
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组出向规则描述信息。未改动的信息按照原信息返回，未填或者变动的内容视为修改，请按需填写。",
		//	  "insertionOrder": true,
		//	  "items": {
		//	    "properties": {
		//	      "CidrIp": {
		//	        "description": "源地址的IPv4 CIDR或IPv6 CIDR",
		//	        "type": "string"
		//	      },
		//	      "CreationTime": {
		//	        "description": "安全组规则创建时间。",
		//	        "type": "string"
		//	      },
		//	      "Description": {
		//	        "description": "安全组规则的描述信息。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为1~ 255个字符。不填保持原有配置。",
		//	        "type": "string"
		//	      },
		//	      "Direction": {
		//	        "description": "安全组规则方向。ingress：入方向。egress：出方向",
		//	        "type": "string"
		//	      },
		//	      "Policy": {
		//	        "description": "访问策略。即CidrIp 、SourceGroupId 或 PrefixListId 对应的资源访问安全组内的网卡。取值如下：accept：允许；drop：拒绝。",
		//	        "type": "string"
		//	      },
		//	      "PortEnd": {
		//	        "description": "端口范围结束值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口",
		//	        "format": "int64",
		//	        "type": "integer"
		//	      },
		//	      "PortStart": {
		//	        "description": "端口范围起始值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口",
		//	        "format": "int64",
		//	        "type": "integer"
		//	      },
		//	      "PrefixListCidrs": {
		//	        "description": "前缀列表的CIDR。",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "type": "string"
		//	        },
		//	        "type": "array",
		//	        "uniqueItems": true
		//	      },
		//	      "PrefixListId": {
		//	        "description": "前缀列表的ID",
		//	        "type": "string"
		//	      },
		//	      "Priority": {
		//	        "description": "安全组规则优先级，数字越小，代表优先级越高。取值范围：1～100。不填默认值：1",
		//	        "format": "int64",
		//	        "type": "integer"
		//	      },
		//	      "Protocol": {
		//	        "description": "协议类型。tcp、udp、icmp、icmpv6、all",
		//	        "type": "string"
		//	      },
		//	      "SourceGroupId": {
		//	        "description": "源地址安全组ID。即该安全组中的所有网卡的地址作为源地址。",
		//	        "type": "string"
		//	      },
		//	      "UpdateTime": {
		//	        "description": "安全组规则更新时间。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Description",
		//	      "Policy",
		//	      "PortEnd",
		//	      "PortStart",
		//	      "Priority",
		//	      "Protocol"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": false
		//	}
		"egress_permissions": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: CidrIp
					"cidr_ip": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "源地址的IPv4 CIDR或IPv6 CIDR",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: CreationTime
					"creation_time": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "安全组规则创建时间。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Description
					"description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "安全组规则的描述信息。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为1~ 255个字符。不填保持原有配置。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Direction
					"direction": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "安全组规则方向。ingress：入方向。egress：出方向",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Policy
					"policy": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "访问策略。即CidrIp 、SourceGroupId 或 PrefixListId 对应的资源访问安全组内的网卡。取值如下：accept：允许；drop：拒绝。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PortEnd
					"port_end": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "端口范围结束值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PortStart
					"port_start": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "端口范围起始值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PrefixListCidrs
					"prefix_list_cidrs": schema.SetAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "前缀列表的CIDR。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PrefixListId
					"prefix_list_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "前缀列表的ID",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Priority
					"priority": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "安全组规则优先级，数字越小，代表优先级越高。取值范围：1～100。不填默认值：1",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Protocol
					"protocol": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "协议类型。tcp、udp、icmp、icmpv6、all",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: SourceGroupId
					"source_group_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "源地址安全组ID。即该安全组中的所有网卡的地址作为源地址。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: UpdateTime
					"update_time": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "安全组规则更新时间。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "安全组出向规则描述信息。未改动的信息按照原信息返回，未填或者变动的内容视为修改，请按需填写。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: IngressPermissions
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组入向规则描述信息。未改动的信息按照原信息返回，未填或者变动的内容视为修改，请按需填写。",
		//	  "insertionOrder": true,
		//	  "items": {
		//	    "properties": {
		//	      "CidrIp": {
		//	        "description": "源地址的IPv4 CIDR或IPv6 CIDR",
		//	        "type": "string"
		//	      },
		//	      "CreationTime": {
		//	        "description": "安全组规则创建时间。",
		//	        "type": "string"
		//	      },
		//	      "Description": {
		//	        "description": "安全组规则的描述信息。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为1~ 255个字符。不填保持原有配置。",
		//	        "type": "string"
		//	      },
		//	      "Direction": {
		//	        "description": "安全组规则方向。ingress：入方向。egress：出方向",
		//	        "type": "string"
		//	      },
		//	      "Policy": {
		//	        "description": "访问策略。即CidrIp 、SourceGroupId 或 PrefixListId 对应的资源访问安全组内的网卡。取值如下：accept：允许；drop：拒绝。",
		//	        "type": "string"
		//	      },
		//	      "PortEnd": {
		//	        "description": "端口范围结束值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口",
		//	        "format": "int64",
		//	        "type": "integer"
		//	      },
		//	      "PortStart": {
		//	        "description": "端口范围起始值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口",
		//	        "format": "int64",
		//	        "type": "integer"
		//	      },
		//	      "PrefixListCidrs": {
		//	        "description": "前缀列表的CIDR。",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "type": "string"
		//	        },
		//	        "type": "array",
		//	        "uniqueItems": true
		//	      },
		//	      "PrefixListId": {
		//	        "description": "前缀列表的ID",
		//	        "type": "string"
		//	      },
		//	      "Priority": {
		//	        "description": "安全组规则优先级，数字越小，代表优先级越高。取值范围：1～100。不填默认值：1",
		//	        "format": "int64",
		//	        "type": "integer"
		//	      },
		//	      "Protocol": {
		//	        "description": "协议类型。tcp、udp、icmp、icmpv6、all",
		//	        "type": "string"
		//	      },
		//	      "SourceGroupId": {
		//	        "description": "源地址安全组ID。即该安全组中的所有网卡的地址作为源地址。",
		//	        "type": "string"
		//	      },
		//	      "UpdateTime": {
		//	        "description": "安全组规则更新时间。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Description",
		//	      "Policy",
		//	      "PortEnd",
		//	      "PortStart",
		//	      "Priority",
		//	      "Protocol"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": false
		//	}
		"ingress_permissions": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: CidrIp
					"cidr_ip": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "源地址的IPv4 CIDR或IPv6 CIDR",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: CreationTime
					"creation_time": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "安全组规则创建时间。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Description
					"description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "安全组规则的描述信息。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为1~ 255个字符。不填保持原有配置。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Direction
					"direction": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "安全组规则方向。ingress：入方向。egress：出方向",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Policy
					"policy": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "访问策略。即CidrIp 、SourceGroupId 或 PrefixListId 对应的资源访问安全组内的网卡。取值如下：accept：允许；drop：拒绝。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PortEnd
					"port_end": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "端口范围结束值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PortStart
					"port_start": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "端口范围起始值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PrefixListCidrs
					"prefix_list_cidrs": schema.SetAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "前缀列表的CIDR。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: PrefixListId
					"prefix_list_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "前缀列表的ID",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Priority
					"priority": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "安全组规则优先级，数字越小，代表优先级越高。取值范围：1～100。不填默认值：1",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Protocol
					"protocol": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "协议类型。tcp、udp、icmp、icmpv6、all",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: SourceGroupId
					"source_group_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "源地址安全组ID。即该安全组中的所有网卡的地址作为源地址。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: UpdateTime
					"update_time": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "安全组规则更新时间。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "安全组入向规则描述信息。未改动的信息按照原信息返回，未填或者变动的内容视为修改，请按需填写。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组所属项目名称。不填默认项目为default。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "安全组所属项目名称。不填默认项目为default。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SecurityGroupId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组ID。",
		//	  "type": "string"
		//	}
		"security_group_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "安全组ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SecurityGroupName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。",
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"security_group_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ServiceManaged
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组是否为托管安全组。true为托管安全组，false为非托管安全组。",
		//	  "type": "boolean"
		//	}
		"service_managed": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "安全组是否为托管安全组。true为托管安全组，false为非托管安全组。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组状态。Available为可用，Creating为创建中。",
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "安全组状态。Available为可用，Creating为创建中。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Key": {
		//	        "description": "用户标签的标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "用户标签的标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签键。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "用户标签的标签值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: Type
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。",
		//	  "type": "string"
		//	}
		"type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VpcId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "安全组所属的VPC ID。",
		//	  "type": "string"
		//	}
		"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "安全组所属的VPC ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::VPC::SecurityGroup",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::VPC::SecurityGroup").WithTerraformTypeName("volcenginecc_vpc_security_group")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"cidr_ip":             "CidrIp",
		"creation_time":       "CreationTime",
		"description":         "Description",
		"direction":           "Direction",
		"egress_permissions":  "EgressPermissions",
		"ingress_permissions": "IngressPermissions",
		"key":                 "Key",
		"policy":              "Policy",
		"port_end":            "PortEnd",
		"port_start":          "PortStart",
		"prefix_list_cidrs":   "PrefixListCidrs",
		"prefix_list_id":      "PrefixListId",
		"priority":            "Priority",
		"project_name":        "ProjectName",
		"protocol":            "Protocol",
		"security_group_id":   "SecurityGroupId",
		"security_group_name": "SecurityGroupName",
		"service_managed":     "ServiceManaged",
		"source_group_id":     "SourceGroupId",
		"status":              "Status",
		"tags":                "Tags",
		"type":                "Type",
		"update_time":         "UpdateTime",
		"value":               "Value",
		"vpc_id":              "VpcId",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
