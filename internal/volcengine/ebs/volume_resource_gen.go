// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package ebs

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/boolplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/float64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/objectplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
	fwvalidators "github.com/volcengine/terraform-provider-volcenginecc/internal/validators"
)

func init() {
	registry.AddResourceFactory("volcenginecc_ebs_volume", volumeResource)
}

// volumeResource returns the Terraform volcenginecc_ebs_volume resource.
// This Terraform resource corresponds to the Cloud Control Volcengine::EBS::Volume resource.
func volumeResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Attachments
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "多挂载云盘的挂载信息",
		//	  "items": {
		//	    "description": "多挂载云盘的挂载信息",
		//	    "properties": {
		//	      "AttachedTime": {
		//	        "description": "挂载时间",
		//	        "type": "string"
		//	      },
		//	      "InstanceId": {
		//	        "description": "实例ID",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array"
		//	}
		"attachments": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: AttachedTime
					"attached_time": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "挂载时间",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceId
					"instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "实例ID",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "多挂载云盘的挂载信息",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: AutoSnapshotPolicyId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "自动快照策略ID",
		//	  "type": "string"
		//	}
		"auto_snapshot_policy_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "自动快照策略ID",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: AutoSnapshotPolicyName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "自动快照策略名称",
		//	  "type": "string"
		//	}
		"auto_snapshot_policy_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "自动快照策略名称",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: BaselinePerformance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "基本性能",
		//	  "properties": {
		//	    "IOPS": {
		//	      "description": "读写iops",
		//	      "type": "number"
		//	    },
		//	    "Throughput": {
		//	      "description": "读写带宽",
		//	      "type": "number"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"baseline_performance": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: IOPS
				"iops": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "读写iops",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: Throughput
				"throughput": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "读写带宽",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "基本性能",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: CreatedAt
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘创建时间",
		//	  "type": "string"
		//	}
		"created_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘创建时间",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DeleteWithInstance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "释放实例时，该云盘是否随实例一起释放",
		//	  "type": "boolean"
		//	}
		"delete_with_instance": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "释放实例时，该云盘是否随实例一起释放",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘描述信息",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘描述信息",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DeviceName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "设备名称",
		//	  "type": "string"
		//	}
		"device_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "设备名称",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ErrorDetail
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "具体错误",
		//	  "type": "string"
		//	}
		"error_detail": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "具体错误",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ExpiredTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "包年包月到期时间",
		//	  "type": "string"
		//	}
		"expired_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "包年包月到期时间",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ExtraPerformance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "额外性能",
		//	  "properties": {
		//	    "ExtraPerformanceTypeId": {
		//	      "description": "额外性能包类型",
		//	      "type": "string"
		//	    },
		//	    "IOPS": {
		//	      "description": "读写iops",
		//	      "type": "number"
		//	    },
		//	    "Throughput": {
		//	      "description": "读写带宽",
		//	      "type": "number"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"extra_performance": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ExtraPerformanceTypeId
				"extra_performance_type_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "额外性能包类型",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: IOPS
				"iops": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "读写iops",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: Throughput
				"throughput": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "读写带宽",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "额外性能",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ExtraPerformanceIOPS
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "额外IOPS性能大小",
		//	  "type": "number"
		//	}
		"extra_performance_iops": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "额外IOPS性能大小",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ExtraPerformanceThroughputMB
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "额外吞吐性能大小，单位为MB/s",
		//	  "type": "number"
		//	}
		"extra_performance_throughput_mb": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "额外吞吐性能大小，单位为MB/s",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ExtraPerformanceTypeId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "额外性能包类型",
		//	  "type": "string"
		//	}
		"extra_performance_type_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "额外性能包类型",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ImageId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘中的镜像ID",
		//	  "type": "string"
		//	}
		"image_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘中的镜像ID",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: InstanceId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "ECS实例ID",
		//	  "type": "string"
		//	}
		"instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "ECS实例ID",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Kind
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘属性，“data”表示数据盘。说明： 仅支持创建数据盘。",
		//	  "type": "string"
		//	}
		"kind": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘属性，“data”表示数据盘。说明： 仅支持创建数据盘。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: OverdueReclaimTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘欠费回收时间",
		//	  "type": "string"
		//	}
		"overdue_reclaim_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘欠费回收时间",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: OverdueTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘欠费关停时间",
		//	  "type": "string"
		//	}
		"overdue_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘欠费关停时间",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PayType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）",
		//	  "enum": [
		//	    "pre",
		//	    "post"
		//	  ],
		//	  "type": "string"
		//	}
		"pay_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"pre",
					"post",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘所属项目名",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘所属项目名",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: RenewType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费",
		//	  "enum": [
		//	    0,
		//	    1,
		//	    2,
		//	    3
		//	  ],
		//	  "type": "number"
		//	}
		"renew_type": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Size
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "Size",
		//	  "type": "number"
		//	}
		"size": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "Size",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: SnapshotCount
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "快照计数",
		//	  "type": "number"
		//	}
		"snapshot_count": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "快照计数",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: SourceSnapshotId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "源快照",
		//	  "type": "string"
		//	}
		"source_snapshot_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "源快照",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘状态",
		//	  "enum": [
		//	    "available",
		//	    "attaching",
		//	    "attached",
		//	    "detaching",
		//	    "creating",
		//	    "deleting",
		//	    "error",
		//	    "extending"
		//	  ],
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘状态",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘的标签信息",
		//	  "items": {
		//	    "description": "资源标签",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "标签键",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "标签值",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array"
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签键",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签值",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "云盘的标签信息",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TotalPerformance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "总性能",
		//	  "properties": {
		//	    "IOPS": {
		//	      "description": "读写iops",
		//	      "type": "number"
		//	    },
		//	    "Throughput": {
		//	      "description": "读写带宽",
		//	      "type": "number"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"total_performance": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: IOPS
				"iops": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "读写iops",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: Throughput
				"throughput": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "读写带宽",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
						float64planmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "总性能",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TradeStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "交易状态 0：创建中 1：运行中 2：创建失败",
		//	  "enum": [
		//	    -1,
		//	    0,
		//	    1,
		//	    2
		//	  ],
		//	  "type": "number"
		//	}
		"trade_status": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "交易状态 0：创建中 1：运行中 2：创建失败",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Float64{ /*START PLAN MODIFIERS*/
				float64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: UpdatedAt
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘更新时间",
		//	  "type": "string"
		//	}
		"updated_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘更新时间",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VolumeId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘id",
		//	  "type": "string"
		//	}
		"volume_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘id",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VolumeName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘显示名称",
		//	  "type": "string"
		//	}
		"volume_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘显示名称",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VolumeType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘类型",
		//	  "type": "string"
		//	}
		"volume_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘类型",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ZoneId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "可用区",
		//	  "type": "string"
		//	}
		"zone_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "可用区",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to Cloud Control primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "云盘",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::EBS::Volume").WithTerraformTypeName("volcenginecc_ebs_volume")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"attached_time":                   "AttachedTime",
		"attachments":                     "Attachments",
		"auto_snapshot_policy_id":         "AutoSnapshotPolicyId",
		"auto_snapshot_policy_name":       "AutoSnapshotPolicyName",
		"baseline_performance":            "BaselinePerformance",
		"created_at":                      "CreatedAt",
		"delete_with_instance":            "DeleteWithInstance",
		"description":                     "Description",
		"device_name":                     "DeviceName",
		"error_detail":                    "ErrorDetail",
		"expired_time":                    "ExpiredTime",
		"extra_performance":               "ExtraPerformance",
		"extra_performance_iops":          "ExtraPerformanceIOPS",
		"extra_performance_throughput_mb": "ExtraPerformanceThroughputMB",
		"extra_performance_type_id":       "ExtraPerformanceTypeId",
		"image_id":                        "ImageId",
		"instance_id":                     "InstanceId",
		"iops":                            "IOPS",
		"key":                             "Key",
		"kind":                            "Kind",
		"overdue_reclaim_time":            "OverdueReclaimTime",
		"overdue_time":                    "OverdueTime",
		"pay_type":                        "PayType",
		"project_name":                    "ProjectName",
		"renew_type":                      "RenewType",
		"size":                            "Size",
		"snapshot_count":                  "SnapshotCount",
		"source_snapshot_id":              "SourceSnapshotId",
		"status":                          "Status",
		"tags":                            "Tags",
		"throughput":                      "Throughput",
		"total_performance":               "TotalPerformance",
		"trade_status":                    "TradeStatus",
		"updated_at":                      "UpdatedAt",
		"value":                           "Value",
		"volume_id":                       "VolumeId",
		"volume_name":                     "VolumeName",
		"volume_type":                     "VolumeType",
		"zone_id":                         "ZoneId",
	})

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
