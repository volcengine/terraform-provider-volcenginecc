// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package storageebs

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_storageebs_volume", volumeDataSource)
}

// volumeDataSource returns the Terraform volcenginecc_storageebs_volume data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::StorageEBS::Volume resource.
func volumeDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AutoSnapshotPolicyId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "自动快照策略ID。",
		//	  "type": "string"
		//	}
		"auto_snapshot_policy_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "自动快照策略ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AutoSnapshotPolicyName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "自动快照策略名称。",
		//	  "type": "string"
		//	}
		"auto_snapshot_policy_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "自动快照策略名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: BaselinePerformance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "基本性能。",
		//	  "properties": {
		//	    "IOPS": {
		//	      "description": "云盘的总IOPS，即云盘的基准IOPS和额外IOPS之和。",
		//	      "type": "number"
		//	    },
		//	    "Throughput": {
		//	      "description": "云盘的总吞吐量，即云盘的基准吞吐量和额外吞吐量之和。",
		//	      "type": "number"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"baseline_performance": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: IOPS
				"iops": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "云盘的总IOPS，即云盘的基准IOPS和额外IOPS之和。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Throughput
				"throughput": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "云盘的总吞吐量，即云盘的基准吞吐量和额外吞吐量之和。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "基本性能。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreatedAt
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘创建时间。",
		//	  "type": "string"
		//	}
		"created_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘创建时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DeleteWithInstance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": false,
		//	  "description": "释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。",
		//	  "type": "boolean"
		//	}
		"delete_with_instance": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。",
		//	  "maxLength": 255,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DeviceName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "设备名称",
		//	  "type": "string"
		//	}
		"device_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "设备名称",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ErrorDetail
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "具体错误",
		//	  "type": "string"
		//	}
		"error_detail": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "具体错误",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ExpiredTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "包年包月到期时间。",
		//	  "type": "string"
		//	}
		"expired_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "包年包月到期时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ExtraPerformance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "额外性能。",
		//	  "properties": {
		//	    "ExtraPerformanceTypeId": {
		//	      "description": "额外性能的类型，取值如下：Balance：均衡型额外性能；IOPS：IOPS型额外性能；Throughput：吞吐量型额外性能。",
		//	      "type": "string"
		//	    },
		//	    "IOPS": {
		//	      "description": "云盘的额外IOPS。",
		//	      "type": "number"
		//	    },
		//	    "Throughput": {
		//	      "description": "云盘的额外吞吐量。",
		//	      "type": "number"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"extra_performance": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ExtraPerformanceTypeId
				"extra_performance_type_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "额外性能的类型，取值如下：Balance：均衡型额外性能；IOPS：IOPS型额外性能；Throughput：吞吐量型额外性能。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: IOPS
				"iops": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "云盘的额外IOPS。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Throughput
				"throughput": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "云盘的额外吞吐量。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "额外性能。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ImageId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘中的镜像ID。",
		//	  "type": "string"
		//	}
		"image_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘中的镜像ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "创建云盘的同时挂载的ECS实例ID。",
		//	  "type": "string"
		//	}
		"instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "创建云盘的同时挂载的ECS实例ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Kind
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。",
		//	  "type": "string"
		//	}
		"kind": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OverdueReclaimTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘欠费回收时间。",
		//	  "type": "string"
		//	}
		"overdue_reclaim_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘欠费回收时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OverdueTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘欠费关停时间。",
		//	  "type": "string"
		//	}
		"overdue_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘欠费关停时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: PayType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。",
		//	  "enum": [
		//	    "pre",
		//	    "post"
		//	  ],
		//	  "type": "string"
		//	}
		"pay_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘所要加入的Project（项目）名称。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘所要加入的Project（项目）名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RenewType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。",
		//	  "enum": [
		//	    0,
		//	    1,
		//	    2,
		//	    3
		//	  ],
		//	  "type": "number"
		//	}
		"renew_type": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Size
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD_PL0：10~65536 GiB；ESSD_FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB",
		//	  "type": "number"
		//	}
		"size": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD_PL0：10~65536 GiB；ESSD_FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SnapshotCount
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "快照计数",
		//	  "type": "number"
		//	}
		"snapshot_count": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "快照计数",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SourceSnapshotId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "源快照。",
		//	  "type": "string"
		//	}
		"source_snapshot_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "源快照。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘状态",
		//	  "enum": [
		//	    "available",
		//	    "attaching",
		//	    "attached",
		//	    "detaching",
		//	    "creating",
		//	    "deleting",
		//	    "error",
		//	    "extending"
		//	  ],
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘状态",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: TotalPerformance
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "总性能。",
		//	  "properties": {
		//	    "IOPS": {
		//	      "description": "云盘的总IOPS，即云盘的基准IOPS和额外IOPS之和。",
		//	      "type": "number"
		//	    },
		//	    "Throughput": {
		//	      "description": "云盘的总吞吐量，即云盘的基准吞吐量和额外吞吐量之和。",
		//	      "type": "number"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"total_performance": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: IOPS
				"iops": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "云盘的总IOPS，即云盘的基准IOPS和额外IOPS之和。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Throughput
				"throughput": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "云盘的总吞吐量，即云盘的基准吞吐量和额外吞吐量之和。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "总性能。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: TradeStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "交易状态 0：创建中 1：运行中 2：创建失败",
		//	  "enum": [
		//	    -1,
		//	    0,
		//	    1,
		//	    2
		//	  ],
		//	  "type": "number"
		//	}
		"trade_status": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "交易状态 0：创建中 1：运行中 2：创建失败",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdatedAt
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘更新时间。",
		//	  "type": "string"
		//	}
		"updated_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘更新时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VolumeId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘id。",
		//	  "type": "string"
		//	}
		"volume_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘id。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VolumeName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（_）。可包含中文、字母、数字、下划线（_）或中划线（-）。长度限制在1~128字符之间。",
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"volume_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（_）。可包含中文、字母、数字、下划线（_）或中划线（-）。长度限制在1~128字符之间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VolumeType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "云盘类型，取值说明如下：ESSD_PL0：极速型SSD云盘，PL0规格。ESSD_FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。",
		//	  "enum": [
		//	    "ESSD_PL0",
		//	    "ESSD_FlexPL",
		//	    "TSSD_TL0"
		//	  ],
		//	  "type": "string"
		//	}
		"volume_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "云盘类型，取值说明如下：ESSD_PL0：极速型SSD云盘，PL0规格。ESSD_FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ZoneId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "可用区ID。",
		//	  "type": "string"
		//	}
		"zone_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "可用区ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::StorageEBS::Volume",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::StorageEBS::Volume").WithTerraformTypeName("volcenginecc_storageebs_volume")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"auto_snapshot_policy_id":   "AutoSnapshotPolicyId",
		"auto_snapshot_policy_name": "AutoSnapshotPolicyName",
		"baseline_performance":      "BaselinePerformance",
		"created_at":                "CreatedAt",
		"delete_with_instance":      "DeleteWithInstance",
		"description":               "Description",
		"device_name":               "DeviceName",
		"error_detail":              "ErrorDetail",
		"expired_time":              "ExpiredTime",
		"extra_performance":         "ExtraPerformance",
		"extra_performance_type_id": "ExtraPerformanceTypeId",
		"image_id":                  "ImageId",
		"instance_id":               "InstanceId",
		"iops":                      "IOPS",
		"kind":                      "Kind",
		"overdue_reclaim_time":      "OverdueReclaimTime",
		"overdue_time":              "OverdueTime",
		"pay_type":                  "PayType",
		"project_name":              "ProjectName",
		"renew_type":                "RenewType",
		"size":                      "Size",
		"snapshot_count":            "SnapshotCount",
		"source_snapshot_id":        "SourceSnapshotId",
		"status":                    "Status",
		"throughput":                "Throughput",
		"total_performance":         "TotalPerformance",
		"trade_status":              "TradeStatus",
		"updated_at":                "UpdatedAt",
		"volume_id":                 "VolumeId",
		"volume_name":               "VolumeName",
		"volume_type":               "VolumeType",
		"zone_id":                   "ZoneId",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
