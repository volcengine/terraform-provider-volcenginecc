// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package vmp

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_vmp_workspace", workspaceDataSource)
}

// workspaceDataSource returns the Terraform volcenginecc_vmp_workspace data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::VMP::Workspace resource.
func workspaceDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: CreateTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区创建时间，RFC3339 格式。",
		//	  "type": "string"
		//	}
		"create_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区创建时间，RFC3339 格式。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DeleteProtectionEnabled
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "是否开启工作区删除保护,true：开启，false：关闭。",
		//	  "type": "boolean"
		//	}
		"delete_protection_enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "是否开启工作区删除保护,true：开启，false：关闭。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区描述信息，字符串形式，长度限制为 0～200。",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区描述信息，字符串形式，长度限制为 0～200。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区规格详情。",
		//	  "properties": {
		//	    "ActiveSeries": {
		//	      "description": "最大活跃时序数。",
		//	      "type": "integer"
		//	    },
		//	    "AvailabilityZoneReplicas": {
		//	      "description": "可用区（az）数。",
		//	      "type": "integer"
		//	    },
		//	    "DownsamplingPeriods": {
		//	      "description": "降采样策略。",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "type": "string"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "IngestSamplesPerSecond": {
		//	      "description": "最大每秒写入样本数。",
		//	      "type": "integer"
		//	    },
		//	    "QueryConcurrency": {
		//	      "description": "最大查询并发数。",
		//	      "type": "integer"
		//	    },
		//	    "QueryPerSecond": {
		//	      "description": "最大查询 QPS。",
		//	      "type": "integer"
		//	    },
		//	    "ReplicasPerZone": {
		//	      "description": "每个可用区（az）的数据副本数。",
		//	      "type": "integer"
		//	    },
		//	    "RetentionPeriod": {
		//	      "description": "最长数据保留时间。",
		//	      "type": "string"
		//	    },
		//	    "ScanSamplesPerSecond": {
		//	      "description": "最大每秒扫描样本数。",
		//	      "type": "integer"
		//	    },
		//	    "ScanSeriesPerSecond": {
		//	      "description": "最大每秒扫描时序数。",
		//	      "type": "integer"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"instance_type": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ActiveSeries
				"active_series": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大活跃时序数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: AvailabilityZoneReplicas
				"availability_zone_replicas": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "可用区（az）数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: DownsamplingPeriods
				"downsampling_periods": schema.SetAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "降采样策略。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: IngestSamplesPerSecond
				"ingest_samples_per_second": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大每秒写入样本数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: QueryConcurrency
				"query_concurrency": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大查询并发数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: QueryPerSecond
				"query_per_second": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大查询 QPS。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ReplicasPerZone
				"replicas_per_zone": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "每个可用区（az）的数据副本数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: RetentionPeriod
				"retention_period": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "最长数据保留时间。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ScanSamplesPerSecond
				"scan_samples_per_second": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大每秒扫描样本数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ScanSeriesPerSecond
				"scan_series_per_second": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大每秒扫描时序数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "工作区规格详情。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceTypeId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。",
		//	  "type": "string"
		//	}
		"instance_type_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区名称，字符串形式，长度限制为 1～100。",
		//	  "maxLength": 100,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区名称，字符串形式，长度限制为 1～100。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OverdueReclaimTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区预期欠费回收时间，RFC3339 格式。",
		//	  "type": "string"
		//	}
		"overdue_reclaim_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区预期欠费回收时间，RFC3339 格式。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Password
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区 BasicAuth 密码。",
		//	  "type": "string"
		//	}
		"password": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区 BasicAuth 密码。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "项目名称。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "项目名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: PrometheusPushIntranetEndpoint
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区 Push Gateway URL 地址。",
		//	  "type": "string"
		//	}
		"prometheus_push_intranet_endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区 Push Gateway URL 地址。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: PrometheusQueryIntranetEndpoint
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区 Query URL 地址。",
		//	  "type": "string"
		//	}
		"prometheus_query_intranet_endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区 Query URL 地址。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: PrometheusWriteIntranetEndpoint
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区 RemoteWrite URL 地址。",
		//	  "type": "string"
		//	}
		"prometheus_write_intranet_endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区 RemoteWrite URL 地址。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Quota
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区配额详情。",
		//	  "properties": {
		//	    "ActiveSeries": {
		//	      "description": "最大活跃时序数。整数形式，默认取值范围为 1～50000000。",
		//	      "type": "integer"
		//	    },
		//	    "IngestSamplesPerSecond": {
		//	      "description": "指标摄入速率，即最大每秒写入样本数。整数形式，默认取值范围为 1～5000000。",
		//	      "type": "integer"
		//	    },
		//	    "QueryPerSecond": {
		//	      "description": "最大查询 QPS。整数形式，默认取值范围为 1～500。",
		//	      "type": "integer"
		//	    },
		//	    "ScanSamplesPerSecond": {
		//	      "description": "最大每秒扫描样本数。整数形式，默认取值范围为 1～1000000000。",
		//	      "type": "integer"
		//	    },
		//	    "ScanSeriesPerSecond": {
		//	      "description": "最大每秒扫描时序数。整数形式，默认取值范围为 1～200000。",
		//	      "type": "integer"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"quota": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ActiveSeries
				"active_series": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大活跃时序数。整数形式，默认取值范围为 1～50000000。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: IngestSamplesPerSecond
				"ingest_samples_per_second": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "指标摄入速率，即最大每秒写入样本数。整数形式，默认取值范围为 1～5000000。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: QueryPerSecond
				"query_per_second": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大查询 QPS。整数形式，默认取值范围为 1～500。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ScanSamplesPerSecond
				"scan_samples_per_second": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大每秒扫描样本数。整数形式，默认取值范围为 1～1000000000。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ScanSeriesPerSecond
				"scan_series_per_second": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "最大每秒扫描时序数。整数形式，默认取值范围为 1～200000。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "工作区配额详情。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。",
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区标签。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "description": "标签。",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "标签键。",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "标签值。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签键。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "标签值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "工作区标签。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Usage
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区用量。",
		//	  "properties": {
		//	    "ActiveSeries": {
		//	      "description": "活跃时序数。",
		//	      "format": "int64",
		//	      "type": "integer"
		//	    },
		//	    "IngestedSamplesPerSecond": {
		//	      "description": "每秒写入样本数。",
		//	      "format": "double",
		//	      "type": "number"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"usage": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ActiveSeries
				"active_series": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "活跃时序数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: IngestedSamplesPerSecond
				"ingested_samples_per_second": schema.Float64Attribute{ /*START ATTRIBUTE*/
					Description: "每秒写入样本数。",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "工作区用量。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Username
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区 BasicAuth 用户名。",
		//	  "pattern": "^[A-Za-z0-9_]+$",
		//	  "type": "string"
		//	}
		"username": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区 BasicAuth 用户名。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: WorkspaceId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "工作区Id。",
		//	  "type": "string"
		//	}
		"workspace_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "工作区Id。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::VMP::Workspace",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::VMP::Workspace").WithTerraformTypeName("volcenginecc_vmp_workspace")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"active_series":                      "ActiveSeries",
		"availability_zone_replicas":         "AvailabilityZoneReplicas",
		"create_time":                        "CreateTime",
		"delete_protection_enabled":          "DeleteProtectionEnabled",
		"description":                        "Description",
		"downsampling_periods":               "DownsamplingPeriods",
		"ingest_samples_per_second":          "IngestSamplesPerSecond",
		"ingested_samples_per_second":        "IngestedSamplesPerSecond",
		"instance_type":                      "InstanceType",
		"instance_type_id":                   "InstanceTypeId",
		"key":                                "Key",
		"name":                               "Name",
		"overdue_reclaim_time":               "OverdueReclaimTime",
		"password":                           "Password",
		"project_name":                       "ProjectName",
		"prometheus_push_intranet_endpoint":  "PrometheusPushIntranetEndpoint",
		"prometheus_query_intranet_endpoint": "PrometheusQueryIntranetEndpoint",
		"prometheus_write_intranet_endpoint": "PrometheusWriteIntranetEndpoint",
		"query_concurrency":                  "QueryConcurrency",
		"query_per_second":                   "QueryPerSecond",
		"quota":                              "Quota",
		"replicas_per_zone":                  "ReplicasPerZone",
		"retention_period":                   "RetentionPeriod",
		"scan_samples_per_second":            "ScanSamplesPerSecond",
		"scan_series_per_second":             "ScanSeriesPerSecond",
		"status":                             "Status",
		"tags":                               "Tags",
		"usage":                              "Usage",
		"username":                           "Username",
		"value":                              "Value",
		"workspace_id":                       "WorkspaceId",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
