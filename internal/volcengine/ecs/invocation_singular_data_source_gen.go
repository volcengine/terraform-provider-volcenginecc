// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package ecs

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_ecs_invocation", invocationDataSource)
}

// invocationDataSource returns the Terraform volcenginecc_ecs_invocation data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::ECS::Invocation resource.
func invocationDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: CommandContent
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "命令内容。",
		//	  "type": "string"
		//	}
		"command_content": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "命令内容。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CommandDescription
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "被调用命令的描述。",
		//	  "type": "string"
		//	}
		"command_description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "被调用命令的描述。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CommandId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "命令ID。",
		//	  "type": "string"
		//	}
		"command_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "命令ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CommandName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "任务触发时的命令名称。",
		//	  "type": "string"
		//	}
		"command_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "任务触发时的命令名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CommandProvider
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "被调用命令的提供方。",
		//	  "type": "string"
		//	}
		"command_provider": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "被调用命令的提供方。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CommandType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "作业触发的命令类型。",
		//	  "type": "string"
		//	}
		"command_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "作业触发的命令类型。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: EnableParameter
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "被调用命令是否使用自定义参数。true：已启用。false：未启用。",
		//	  "type": "boolean"
		//	}
		"enable_parameter": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "被调用命令是否使用自定义参数。true：已启用。false：未启用。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: EndTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "任务结束时间。",
		//	  "type": "string"
		//	}
		"end_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "任务结束时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Frequency
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "执行频率。RepeatMode=Rate 时本参数必填。格式：\u003c执行间隔数值\u003e\u003c执行间隔单位\u003e，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。",
		//	  "type": "string"
		//	}
		"frequency": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "执行频率。RepeatMode=Rate 时本参数必填。格式：<执行间隔数值><执行间隔单位>，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceIds
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "实例ID列表，最多支持200个ID。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "maxItems": 200,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"instance_ids": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "实例ID列表，最多支持200个ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceNumber
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "执行实例数量。",
		//	  "type": "integer"
		//	}
		"instance_number": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "执行实例数量。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InvocationDescription
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "作业描述，默认为空字符串，不超过256个字符。",
		//	  "maxLength": 256,
		//	  "type": "string"
		//	}
		"invocation_description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "作业描述，默认为空字符串，不超过256个字符。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InvocationId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "任务执行 ID。",
		//	  "type": "string"
		//	}
		"invocation_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "任务执行 ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InvocationName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。",
		//	  "maxLength": 64,
		//	  "type": "string"
		//	}
		"invocation_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InvocationResults
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "单台实例执行命令的结果。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "CommandId": {
		//	        "description": "命令ID。",
		//	        "type": "string"
		//	      },
		//	      "EndTime": {
		//	        "description": "命令执行的完成时间。",
		//	        "type": "string"
		//	      },
		//	      "ErrorCode": {
		//	        "description": "命令执行失败的错误码。TaskDeliveryTimeout：表示命令下发超时。TaskExecutionTimeout：表示命令执行超时。TaskExecutionFailed：表示命令执行失败。",
		//	        "enum": [
		//	          "TaskDeliveryTimeout",
		//	          "TaskExecutionTimeout",
		//	          "TaskExecutionFailed"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "ErrorMessage": {
		//	        "description": "命令执行失败的错误信息。",
		//	        "type": "string"
		//	      },
		//	      "ExitCode": {
		//	        "description": "脚本执行后的退出状态码。",
		//	        "type": "integer"
		//	      },
		//	      "InstanceId": {
		//	        "description": "实例ID。",
		//	        "type": "string"
		//	      },
		//	      "InvocationId": {
		//	        "description": "任务执行ID。",
		//	        "type": "string"
		//	      },
		//	      "InvocationResultId": {
		//	        "description": "任务执行结果ID。",
		//	        "type": "string"
		//	      },
		//	      "InvocationResultStatus": {
		//	        "description": "单台实例的命令进度状态。",
		//	        "type": "string"
		//	      },
		//	      "Output": {
		//	        "description": "经过Base64编码的命令执行后输出信息。",
		//	        "type": "string"
		//	      },
		//	      "StartTime": {
		//	        "description": "命令在实例中开始执行的时间。",
		//	        "type": "string"
		//	      },
		//	      "Username": {
		//	        "description": "在实例中执行命令的用户名称。",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"invocation_results": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: CommandId
					"command_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "命令ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: EndTime
					"end_time": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "命令执行的完成时间。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ErrorCode
					"error_code": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "命令执行失败的错误码。TaskDeliveryTimeout：表示命令下发超时。TaskExecutionTimeout：表示命令执行超时。TaskExecutionFailed：表示命令执行失败。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ErrorMessage
					"error_message": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "命令执行失败的错误信息。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ExitCode
					"exit_code": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "脚本执行后的退出状态码。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InstanceId
					"instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "实例ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InvocationId
					"invocation_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "任务执行ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InvocationResultId
					"invocation_result_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "任务执行结果ID。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InvocationResultStatus
					"invocation_result_status": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "单台实例的命令进度状态。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Output
					"output": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "经过Base64编码的命令执行后输出信息。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: StartTime
					"start_time": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "命令在实例中开始执行的时间。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Username
					"username": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "在实例中执行命令的用户名称。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "单台实例执行命令的结果。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InvocationStatus
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "命令执行的总执行状态。",
		//	  "type": "string"
		//	}
		"invocation_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "命令执行的总执行状态。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LaunchTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "执行时间。",
		//	  "type": "string"
		//	}
		"launch_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "执行时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ParameterDefinitions
		// Cloud Control resource type schema:
		//
		//	{
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "DecimalPrecision": {
		//	        "default": 0,
		//	        "description": "自定义参数值（数字）允许的小数点后位数。",
		//	        "maximum": 10,
		//	        "minimum": 0,
		//	        "type": "integer"
		//	      },
		//	      "DefaultValue": {
		//	        "description": "自定义参数默认值。",
		//	        "type": "string"
		//	      },
		//	      "MaxLength": {
		//	        "description": "自定义参数值（字符串）的最大长度。",
		//	        "maximum": 1000,
		//	        "type": "integer"
		//	      },
		//	      "MaxValue": {
		//	        "description": "自定义参数值（数字）的最大值。",
		//	        "type": "string"
		//	      },
		//	      "MinLength": {
		//	        "description": "自定义参数值（字符串）的最小长度。",
		//	        "maximum": 1000,
		//	        "type": "integer"
		//	      },
		//	      "MinValue": {
		//	        "description": "自定义参数值（数字）的最小值。",
		//	        "type": "string"
		//	      },
		//	      "Name": {
		//	        "description": "自定义参数名称，需要在脚本中通过{{Param}}定义 。",
		//	        "maxLength": 64,
		//	        "type": "string"
		//	      },
		//	      "Required": {
		//	        "description": "是否必填。true：必填。false：非必填。",
		//	        "type": "boolean"
		//	      },
		//	      "Type": {
		//	        "description": "自定义参数类型。String：表示自定义参数类型字符串类型。Digit：表示自定义参数类型为数值类型。",
		//	        "enum": [
		//	          "String",
		//	          "Digit"
		//	        ],
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"parameter_definitions": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: DecimalPrecision
					"decimal_precision": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "自定义参数值（数字）允许的小数点后位数。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: DefaultValue
					"default_value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "自定义参数默认值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: MaxLength
					"max_length": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "自定义参数值（字符串）的最大长度。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: MaxValue
					"max_value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "自定义参数值（数字）的最大值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: MinLength
					"min_length": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "自定义参数值（字符串）的最小长度。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: MinValue
					"min_value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "自定义参数值（数字）的最小值。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Name
					"name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "自定义参数名称，需要在脚本中通过{{Param}}定义 。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Required
					"required": schema.BoolAttribute{ /*START ATTRIBUTE*/
						Description: "是否必填。true：必填。false：非必填。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Type
					"type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "自定义参数类型。String：表示自定义参数类型字符串类型。Digit：表示自定义参数类型为数值类型。",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: Parameters
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。",
		//	  "type": "string"
		//	}
		"parameters": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProjectName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "资源所属项目，一个资源只能归属于一个项目。",
		//	  "type": "string"
		//	}
		"project_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "资源所属项目，一个资源只能归属于一个项目。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RecurrenceEndTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "周期结束时间，仅适用于周期任务（Rate）。",
		//	  "type": "string"
		//	}
		"recurrence_end_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "周期结束时间，仅适用于周期任务（Rate）。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RepeatMode
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。",
		//	  "enum": [
		//	    "Once",
		//	    "Rate",
		//	    "Fixed"
		//	  ],
		//	  "type": "string"
		//	}
		"repeat_mode": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: StartTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "任务开始时间。",
		//	  "type": "string"
		//	}
		"start_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "任务开始时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// Cloud Control resource type schema:
		//
		//	{
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "properties": {
		//	      "Key": {
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: Timeout
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": 60,
		//	  "description": "创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。",
		//	  "maximum": 86400,
		//	  "minimum": 30,
		//	  "type": "integer"
		//	}
		"timeout": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Username
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "在ECS实例中执行命令的用户名称。",
		//	  "type": "string"
		//	}
		"username": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "在ECS实例中执行命令的用户名称。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: WindowsPassword
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "自定义windows用户的密码。",
		//	  "type": "string"
		//	}
		"windows_password": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "自定义windows用户的密码。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: WorkingDir
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "创建的命令在ECS实例中运行的目录。",
		//	  "type": "string"
		//	}
		"working_dir": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "创建的命令在ECS实例中运行的目录。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::ECS::Invocation",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::ECS::Invocation").WithTerraformTypeName("volcenginecc_ecs_invocation")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"command_content":          "CommandContent",
		"command_description":      "CommandDescription",
		"command_id":               "CommandId",
		"command_name":             "CommandName",
		"command_provider":         "CommandProvider",
		"command_type":             "CommandType",
		"decimal_precision":        "DecimalPrecision",
		"default_value":            "DefaultValue",
		"enable_parameter":         "EnableParameter",
		"end_time":                 "EndTime",
		"error_code":               "ErrorCode",
		"error_message":            "ErrorMessage",
		"exit_code":                "ExitCode",
		"frequency":                "Frequency",
		"instance_id":              "InstanceId",
		"instance_ids":             "InstanceIds",
		"instance_number":          "InstanceNumber",
		"invocation_description":   "InvocationDescription",
		"invocation_id":            "InvocationId",
		"invocation_name":          "InvocationName",
		"invocation_result_id":     "InvocationResultId",
		"invocation_result_status": "InvocationResultStatus",
		"invocation_results":       "InvocationResults",
		"invocation_status":        "InvocationStatus",
		"key":                      "Key",
		"launch_time":              "LaunchTime",
		"max_length":               "MaxLength",
		"max_value":                "MaxValue",
		"min_length":               "MinLength",
		"min_value":                "MinValue",
		"name":                     "Name",
		"output":                   "Output",
		"parameter_definitions":    "ParameterDefinitions",
		"parameters":               "Parameters",
		"project_name":             "ProjectName",
		"recurrence_end_time":      "RecurrenceEndTime",
		"repeat_mode":              "RepeatMode",
		"required":                 "Required",
		"start_time":               "StartTime",
		"tags":                     "Tags",
		"timeout":                  "Timeout",
		"type":                     "Type",
		"username":                 "Username",
		"value":                    "Value",
		"windows_password":         "WindowsPassword",
		"working_dir":              "WorkingDir",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
