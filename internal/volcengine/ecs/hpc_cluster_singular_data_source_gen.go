// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package ecs

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_ecs_hpc_cluster", hpcClusterDataSource)
}

// hpcClusterDataSource returns the Terraform volcenginecc_ecs_hpc_cluster data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::ECS::HpcCluster resource.
func hpcClusterDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: CreatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "创建时间，格式满足RFC3339。",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "创建时间，格式满足RFC3339。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "高性能计算集群描述，默认为空字符串。必须以字母或中文开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0～255之间。",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "高性能计算集群描述，默认为空字符串。必须以字母或中文开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0～255之间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: HpcClusterId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "高性能计算集群ID。",
		//	  "type": "string"
		//	}
		"hpc_cluster_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "高性能计算集群ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "高性能计算集群名称。必须以字母或中文开头。只能包含中文、字母、数字、下划线和中划线。长度限制在1～128之间。",
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "高性能计算集群名称。必须以字母或中文开头。只能包含中文、字母、数字、下划线和中划线。长度限制在1～128之间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "更新时间，格式满足RFC3339。",
		//	  "type": "string"
		//	}
		"updated_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "更新时间，格式满足RFC3339。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VpcId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "私有网络ID。",
		//	  "type": "string"
		//	}
		"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "私有网络ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ZoneId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "高性能计算集群所属可用区ID。",
		//	  "type": "string"
		//	}
		"zone_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "高性能计算集群所属可用区ID。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::ECS::HpcCluster",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::ECS::HpcCluster").WithTerraformTypeName("volcenginecc_ecs_hpc_cluster")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"created_time":   "CreatedTime",
		"description":    "Description",
		"hpc_cluster_id": "HpcClusterId",
		"name":           "Name",
		"updated_time":   "UpdatedTime",
		"vpc_id":         "VpcId",
		"zone_id":        "ZoneId",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
