// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package cr

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("volcenginecc_cr_name_space", nameSpaceDataSource)
}

// nameSpaceDataSource returns the Terraform volcenginecc_cr_name_space data source.
// This Terraform data source corresponds to the Cloud Control Volcengine::CR::NameSpace resource.
func nameSpaceDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: CreatedTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "命名空间的创建时间。",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "命名空间的创建时间。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "命名空间名称。支持小写英文、数字、英文句号（.）、短划线（-）、下划线（_），标点符号不能出现在首位或末位，也不能连续输入。长度限制为 2～90 个字符。标准版实例：同一个镜像仓库实例下，名称必须唯一。体验版实例：同一地域下，所有火山引擎账号范围内的命名空间名称需要保持唯一。如果您设置的命名空间名称已被占用，请尝试其他名称或者 购买标准版实例。",
		//	  "maxLength": 90,
		//	  "minLength": 2,
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "命名空间名称。支持小写英文、数字、英文句号（.）、短划线（-）、下划线（_），标点符号不能出现在首位或末位，也不能连续输入。长度限制为 2～90 个字符。标准版实例：同一个镜像仓库实例下，名称必须唯一。体验版实例：同一地域下，所有火山引擎账号范围内的命名空间名称需要保持唯一。如果您设置的命名空间名称已被占用，请尝试其他名称或者 购买标准版实例。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Project
		// Cloud Control resource type schema:
		//
		//	{
		//	  "default": "default",
		//	  "description": "命名空间所属项目的名称。参数值大小写敏感，不得超过 64 个字符。参数为空时，命名空间关联默认的 default项目。",
		//	  "maxLength": 64,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"project": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "命名空间所属项目的名称。参数值大小写敏感，不得超过 64 个字符。参数为空时，命名空间关联默认的 default项目。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Registry
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "命名空间下新建 OCI 制品仓库的默认公开属性，默认 Private。公开属性支持后续变更。Public：公开，不需要访问密钥，支持直接访问。Private：私有，需要输入访问密钥后才能够访问。",
		//	  "type": "string"
		//	}
		"registry": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "命名空间下新建 OCI 制品仓库的默认公开属性，默认 Private。公开属性支持后续变更。Public：公开，不需要访问密钥，支持直接访问。Private：私有，需要输入访问密钥后才能够访问。",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for Volcengine::CR::NameSpace",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::CR::NameSpace").WithTerraformTypeName("volcenginecc_cr_name_space")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"created_time": "CreatedTime",
		"name":         "Name",
		"project":      "Project",
		"registry":     "Registry",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
