// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package transitrouter

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/generic"
	"github.com/volcengine/terraform-provider-volcenginecc/internal/registry"
)

func init() {
	registry.AddResourceFactory("volcenginecc_transitrouter_transit_router_route_entry", transitRouterRouteEntryResource)
}

// transitRouterRouteEntryResource returns the Terraform volcenginecc_transitrouter_transit_router_route_entry resource.
// This Terraform resource corresponds to the Cloud Control Volcengine::TransitRouter::TransitRouterRouteEntry resource.
func transitRouterRouteEntryResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AsPath
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的AS路径。",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"as_path": schema.SetAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "路由条目的AS路径。",
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: CreationTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的创建时间。",
		//	  "type": "string"
		//	}
		"creation_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由条目的创建时间。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Description
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "TR路由表路由条目的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。",
		//	  "maxLength": 255,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "TR路由表路由条目的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthBetween(0, 255),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DestinationCidrBlock
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的目标网段。",
		//	  "type": "string"
		//	}
		"destination_cidr_block": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由条目的目标网段。",
			Required:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.RequiresReplace(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Status
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的状态。Available：可用。Creating：创建中。Pending：配置中。Deleting：删除中。Conflicted：未生效。",
		//	  "enum": [
		//	    "Available",
		//	    "Creating",
		//	    "Pending",
		//	    "Deleting",
		//	    "Conflicted"
		//	  ],
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由条目的状态。Available：可用。Creating：创建中。Pending：配置中。Deleting：删除中。Conflicted：未生效。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TransitRouterRouteEntryId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "TR路由条目的ID。",
		//	  "type": "string"
		//	}
		"transit_router_route_entry_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "TR路由条目的ID。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TransitRouterRouteEntryName
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的名称。",
		//	  "type": "string"
		//	}
		"transit_router_route_entry_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由条目的名称。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TransitRouterRouteEntryNextHopId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的下一跳ID。",
		//	  "type": "string"
		//	}
		"transit_router_route_entry_next_hop_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由条目的下一跳ID。",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TransitRouterRouteEntryNextHopType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的下一跳类型。取值如下：Attachment：网络实例，表示匹配该路由条目的流量会被转发到指定的网络实例。BlackHole：黑洞，表示匹配该路由条目的流量会被丢弃。",
		//	  "enum": [
		//	    "Attachment",
		//	    "BlackHole"
		//	  ],
		//	  "type": "string"
		//	}
		"transit_router_route_entry_next_hop_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由条目的下一跳类型。取值如下：Attachment：网络实例，表示匹配该路由条目的流量会被转发到指定的网络实例。BlackHole：黑洞，表示匹配该路由条目的流量会被丢弃。",
			Required:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"Attachment",
					"BlackHole",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.RequiresReplace(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TransitRouterRouteEntryType
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的类型。Static：静态路由。Propagated：自动学习路由。",
		//	  "enum": [
		//	    "Static",
		//	    "Propagated"
		//	  ],
		//	  "type": "string"
		//	}
		"transit_router_route_entry_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由条目的类型。Static：静态路由。Propagated：自动学习路由。",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"Static",
					"Propagated",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TransitRouterRouteTableId
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "中转路由器实例关联的路由表的ID。",
		//	  "type": "string"
		//	}
		"transit_router_route_table_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "中转路由器实例关联的路由表的ID。",
			Required:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.RequiresReplace(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: UpdateTime
		// Cloud Control resource type schema:
		//
		//	{
		//	  "description": "路由条目的更新时间。",
		//	  "type": "string"
		//	}
		"update_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "路由条目的更新时间。",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to Cloud Control primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "通过为网络实例连接或跨地域连接关联的路由表创建或删除静态路由，能够灵活地控制中转路由器中的流量走向。",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudControlTypeName("Volcengine::TransitRouter::TransitRouterRouteEntry").WithTerraformTypeName("volcenginecc_transitrouter_transit_router_route_entry")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"as_path":                                  "AsPath",
		"creation_time":                            "CreationTime",
		"description":                              "Description",
		"destination_cidr_block":                   "DestinationCidrBlock",
		"status":                                   "Status",
		"transit_router_route_entry_id":            "TransitRouterRouteEntryId",
		"transit_router_route_entry_name":          "TransitRouterRouteEntryName",
		"transit_router_route_entry_next_hop_id":   "TransitRouterRouteEntryNextHopId",
		"transit_router_route_entry_next_hop_type": "TransitRouterRouteEntryNextHopType",
		"transit_router_route_entry_type":          "TransitRouterRouteEntryType",
		"transit_router_route_table_id":            "TransitRouterRouteTableId",
		"update_time":                              "UpdateTime",
	})

	opts = opts.WithReadOnlyPropertyPaths([]string{
		"/properties/TransitRouterRouteEntryId",
		"/properties/Status",
		"/properties/CreationTime",
		"/properties/UpdateTime",
		"/properties/AsPath",
	})

	opts = opts.WithCreateOnlyPropertyPaths([]string{
		"/properties/TransitRouterRouteTableId",
		"/properties/DestinationCidrBlock",
		"/properties/TransitRouterRouteEntryNextHopId",
		"/properties/TransitRouterRouteEntryNextHopType",
		"/properties/TransitRouterRouteEntryType",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
