// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudcontrol

import (
	"time"

	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
)

const opCreateResourceCommon = "CreateResource"

func (c *CloudControl) CreateResourceRequest(input *CreateResourceInput) (req *request.Request, output *CreateResourceOutput) {
	op := &request.Operation{
		Name:       opCreateResourceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateResourceInput{}
	}

	output = &CreateResourceOutput{}
	req = c.newRequest(op, input, output)
	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")
	return
}

func (c *CloudControl) CreateResourceWithContext(ctx volcengine.Context, input *CreateResourceInput, opts ...request.Option) (*CreateResourceOutput, error) {
	req, out := c.CreateResourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type (
	CreateResourceInput struct {
		TypeName    *string
		RegionID    string
		ClientToken *string
		TargetState *map[string]any
	}

	CreateResourceOutput struct {
		Metadata *response.ResponseMetadata

		ProgressEvent
	}
	ProgressEvent struct {
		EventTime       time.Time
		ErrorCode       *string
		TypeName        *string
		Identifier      *string
		Operation       *string
		OperationStatus *string
		TaskID          *string
		StatusMessage   *string
		ResourceModel   *string
	}
)

func (output *CreateResourceOutput) GetRequestId() string {
	if output == nil || output.Metadata == nil {
		return "-"
	}
	reqId := output.Metadata.RequestId
	if reqId == "" {
		return "-"
	}
	return output.Metadata.RequestId
}
